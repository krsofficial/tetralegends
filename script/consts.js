export const MONOMINO_PIECES = {
  I: {
    shape: [
      [
        [0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0],
        [0, 1, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0],
      ],
      [
        [0, 0, 0, 0, 0, 0],
        [0, 0, 0, 4, 0, 0],
        [0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0],
      ],
      [
        [0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 3, 0],
        [0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0],
      ],
      [
        [0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0],
        [0, 0, 6, 0, 0, 0],
        [0, 0, 0, 0, 0, 0],
      ],
    ],
  },
  L: {
    shape: [
      [
        [0, 0, 0],
        [1, 0, 0],
        [0, 0, 0],
      ],
      [
        [0, 1, 0],
        [0, 0, 0],
        [0, 0, 0],
      ],
      [
        [0, 0, 0],
        [0, 0, 1],
        [0, 0, 0],
      ],
      [
        [0, 0, 0],
        [0, 0, 0],
        [0, 1, 0],
      ],
    ],
  },
  O: {
    shape: [
      [
        [0, 0, 0, 0],
        [0, 1, 0, 0],
        [0, 0, 0, 0],
        [0, 0, 0, 0],
      ],
      [
        [0, 0, 0, 0],
        [0, 0, 1, 0],
        [0, 0, 0, 0],
        [0, 0, 0, 0],
      ],
      [
        [0, 0, 0, 0],
        [0, 0, 0, 0],
        [0, 0, 1, 0],
        [0, 0, 0, 0],
      ],
      [
        [0, 0, 0, 0],
        [0, 0, 0, 0],
        [0, 1, 0, 0],
        [0, 0, 0, 0],
      ],
    ],
  },
  Z: {
    shape: [
      [
        [1, 0, 0],
        [0, 0, 0],
        [0, 0, 0],
      ],
      [
        [0, 0, 1],
        [0, 0, 0],
        [0, 0, 0],
      ],
      [
        [0, 0, 0],
        [0, 0, 0],
        [0, 0, 1],
      ],
      [
        [0, 0, 0],
        [0, 0, 0],
        [1, 0, 0],
      ],
    ],
  },
  T: {
    shape: [
      [
        [0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0],
        [0, 1, 0, 0, 0],
        [0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0],
      ],
      [
        [0, 0, 0, 0, 0],
        [0, 0, 1, 0, 0],
        [0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0],
      ],
      [
        [0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0],
        [0, 0, 0, 1, 0],
        [0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0],
      ],
      [
        [0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0],
        [0, 0, 1, 0, 0],
        [0, 0, 0, 0, 0],
      ],
    ],
  },
  J: {
    shape: [
      [
        [1, 0, 0],
        [0, 0, 0],
        [0, 0, 0],
      ],
      [
        [0, 0, 1],
        [0, 0, 0],
        [0, 0, 0],
      ],
      [
        [0, 0, 0],
        [0, 0, 0],
        [0, 0, 1],
      ],
      [
        [0, 0, 0],
        [0, 0, 0],
        [1, 0, 0],
      ],
    ],
  },
  S: {
    shape: [
      [
        [0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0],
        [0, 1, 0, 0, 0],
        [0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0],
      ],
      [
        [0, 0, 0, 0, 0],
        [0, 0, 1, 0, 0],
        [0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0],
      ],
      [
        [0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0],
        [0, 0, 0, 1, 0],
        [0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0],
      ],
      [
        [0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0],
        [0, 0, 1, 0, 0],
        [0, 0, 0, 0, 0],
      ],
    ],
  },
}
export const DOMINO_PIECES = {
  I: {
    shape: [
      [
        [0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0],
        [0, 1, 3, 0, 0, 0],
        [0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0],
      ],
      [
        [0, 0, 0, 0, 0, 0],
        [0, 0, 0, 4, 0, 0],
        [0, 0, 0, 6, 0, 0],
        [0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0],
      ],
      [
        [0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0],
        [0, 0, 0, 1, 3, 0],
        [0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0],
      ],
      [
        [0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0],
        [0, 0, 4, 0, 0, 0],
        [0, 0, 6, 0, 0, 0],
        [0, 0, 0, 0, 0, 0],
      ],
    ],
  },
  L: {
    shape: [
      [
        [0, 0, 0],
        [1, 1, 0],
        [0, 0, 0],
      ],
      [
        [0, 1, 0],
        [0, 1, 0],
        [0, 0, 0],
      ],
      [
        [0, 0, 0],
        [0, 1, 1],
        [0, 0, 0],
      ],
      [
        [0, 0, 0],
        [0, 1, 0],
        [0, 1, 0],
      ],
    ],
  },
  O: {
    shape: [
      [
        [0, 0, 0, 0],
        [0, 1, 1, 0],
        [0, 0, 0, 0],
        [0, 0, 0, 0],
      ],
      [
        [0, 0, 0, 0],
        [0, 0, 1, 0],
        [0, 0, 1, 0],
        [0, 0, 0, 0],
      ],
      [
        [0, 0, 0, 0],
        [0, 0, 0, 0],
        [0, 1, 1, 0],
        [0, 0, 0, 0],
      ],
      [
        [0, 0, 0, 0],
        [0, 1, 0, 0],
        [0, 1, 0, 0],
        [0, 0, 0, 0],
      ],
    ],
  },
  Z: {
    shape: [
      [
        [1, 1, 0],
        [0, 0, 0],
        [0, 0, 0],
      ],
      [
        [0, 0, 1],
        [0, 0, 1],
        [0, 0, 0],
      ],
      [
        [0, 0, 0],
        [0, 0, 0],
        [0, 1, 1],
      ],
      [
        [0, 0, 0],
        [1, 0, 0],
        [1, 0, 0],
      ],
    ],
  },
  T: {
    shape: [
      [
        [0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0],
        [0, 1, 1, 0, 0],
        [0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0],
      ],
      [
        [0, 0, 0, 0, 0],
        [0, 0, 1, 0, 0],
        [0, 0, 1, 0, 0],
        [0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0],
      ],
      [
        [0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0],
        [0, 0, 1, 1, 0],
        [0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0],
      ],
      [
        [0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0],
        [0, 0, 1, 0, 0],
        [0, 0, 1, 0, 0],
        [0, 0, 0, 0, 0],
      ],
    ],
  },
  J: {
    shape: [
      [
        [1, 0, 0],
        [1, 0, 0],
        [0, 0, 0],
      ],
      [
        [0, 1, 1],
        [0, 0, 0],
        [0, 0, 0],
      ],
      [
        [0, 0, 0],
        [0, 0, 1],
        [0, 0, 1],
      ],
      [
        [0, 0, 0],
        [0, 0, 0],
        [1, 1, 0],
      ],
    ],
  },
  S: {
    shape: [
      [
        [0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0],
        [0, 1, 1, 0, 0],
        [0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0],
      ],
      [
        [0, 0, 0, 0, 0],
        [0, 0, 1, 0, 0],
        [0, 0, 1, 0, 0],
        [0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0],
      ],
      [
        [0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0],
        [0, 0, 1, 1, 0],
        [0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0],
      ],
      [
        [0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0],
        [0, 0, 1, 0, 0],
        [0, 0, 1, 0, 0],
        [0, 0, 0, 0, 0],
      ],
    ],
  },
}
export const TROMINO_PIECES = {
  I: {
    shape: [
      [
        [0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0],
        [0, 1, 2, 3, 0, 0],
        [0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0],
      ],
      [
        [0, 0, 0, 0, 0, 0],
        [0, 0, 0, 4, 0, 0],
        [0, 0, 0, 5, 0, 0],
        [0, 0, 0, 6, 0, 0],
        [0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0],
      ],
      [
        [0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0],
        [0, 0, 1, 2, 3, 0],
        [0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0],
      ],
      [
        [0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0],
        [0, 0, 4, 0, 0, 0],
        [0, 0, 5, 0, 0, 0],
        [0, 0, 6, 0, 0, 0],
        [0, 0, 0, 0, 0, 0],
      ],
    ],
  },
  L: {
    shape: [
      [
        [0, 0, 0],
        [1, 1, 1],
        [0, 0, 0],
      ],
      [
        [0, 1, 0],
        [0, 1, 0],
        [0, 1, 0],
      ],
      [
        [0, 0, 0],
        [1, 1, 1],
        [0, 0, 0],
      ],
      [
        [0, 1, 0],
        [0, 1, 0],
        [0, 1, 0],
      ],
    ],
  },
  O: {
    shape: [
      [
        [0, 0, 0, 0],
        [0, 1, 1, 0],
        [0, 0, 1, 0],
        [0, 0, 0, 0],
      ],
      [
        [0, 0, 0, 0],
        [0, 0, 1, 0],
        [0, 1, 1, 0],
        [0, 0, 0, 0],
      ],
      [
        [0, 0, 0, 0],
        [0, 1, 0, 0],
        [0, 1, 1, 0],
        [0, 0, 0, 0],
      ],
      [
        [0, 0, 0, 0],
        [0, 1, 1, 0],
        [0, 1, 0, 0],
        [0, 0, 0, 0],
      ],
    ],
  },
  Z: {
    shape: [
      [
        [1, 1, 0],
        [0, 1, 0],
        [0, 0, 0],
      ],
      [
        [0, 0, 1],
        [0, 1, 1],
        [0, 0, 0],
      ],
      [
        [0, 0, 0],
        [0, 1, 0],
        [0, 1, 1],
      ],
      [
        [0, 0, 0],
        [1, 1, 0],
        [1, 0, 0],
      ],
    ],
  },
  T: {
    shape: [
      [
        [0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0],
        [0, 1, 1, 1, 0],
        [0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0],
      ],
      [
        [0, 0, 0, 0, 0],
        [0, 0, 1, 0, 0],
        [0, 0, 1, 0, 0],
        [0, 0, 1, 0, 0],
        [0, 0, 0, 0, 0],
      ],
      [
        [0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0],
        [0, 1, 1, 1, 0],
        [0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0],
      ],
      [
        [0, 0, 0, 0, 0],
        [0, 0, 1, 0, 0],
        [0, 0, 1, 0, 0],
        [0, 0, 1, 0, 0],
        [0, 0, 0, 0, 0],
      ],
    ],
  },
  J: {
    shape: [
      [
        [1, 0, 0],
        [1, 1, 0],
        [0, 0, 0],
      ],
      [
        [0, 1, 1],
        [0, 1, 0],
        [0, 0, 0],
      ],
      [
        [0, 0, 0],
        [0, 1, 1],
        [0, 0, 1],
      ],
      [
        [0, 0, 0],
        [0, 1, 0],
        [1, 1, 0],
      ],
    ],
  },
  S: {
    shape: [
      [
        [0, 0, 0, 0, 0],
        [0, 0, 1, 0, 0],
        [0, 1, 1, 0, 0],
        [0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0],
      ],
      [
        [0, 0, 0, 0, 0],
        [0, 0, 1, 0, 0],
        [0, 0, 1, 1, 0],
        [0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0],
      ],
      [
        [0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0],
        [0, 0, 1, 1, 0],
        [0, 0, 1, 0, 0],
        [0, 0, 0, 0, 0],
      ],
      [
        [0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0],
        [0, 1, 1, 0, 0],
        [0, 0, 1, 0, 0],
        [0, 0, 0, 0, 0],
      ],
    ],
  },
}
export const PIECES = {
  I: {
    shape: [
      [
        [0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0],
        [0, 1, 2, 2, 3, 0],
        [0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0],
      ],
      [
        [0, 0, 0, 0, 0, 0],
        [0, 0, 0, 4, 0, 0],
        [0, 0, 0, 5, 0, 0],
        [0, 0, 0, 5, 0, 0],
        [0, 0, 0, 6, 0, 0],
        [0, 0, 0, 0, 0, 0],
      ],
      [
        [0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0],
        [0, 1, 2, 2, 3, 0],
        [0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0],
      ],
      [
        [0, 0, 0, 0, 0, 0],
        [0, 0, 4, 0, 0, 0],
        [0, 0, 5, 0, 0, 0],
        [0, 0, 5, 0, 0, 0],
        [0, 0, 6, 0, 0, 0],
        [0, 0, 0, 0, 0, 0],
      ],
    ],
  },
  L: {
    shape: [
      [
        [0, 0, 1],
        [1, 1, 1],
        [0, 0, 0],
      ],
      [
        [0, 1, 0],
        [0, 1, 0],
        [0, 1, 1],
      ],
      [
        [0, 0, 0],
        [1, 1, 1],
        [1, 0, 0],
      ],
      [
        [1, 1, 0],
        [0, 1, 0],
        [0, 1, 0],
      ],
    ],
  },
  O: {
    shape: [
      [
        [0, 0, 0, 0],
        [0, 1, 1, 0],
        [0, 1, 1, 0],
        [0, 0, 0, 0],
      ],
      [
        [0, 0, 0, 0],
        [0, 1, 1, 0],
        [0, 1, 1, 0],
        [0, 0, 0, 0],
      ],
      [
        [0, 0, 0, 0],
        [0, 1, 1, 0],
        [0, 1, 1, 0],
        [0, 0, 0, 0],
      ],
      [
        [0, 0, 0, 0],
        [0, 1, 1, 0],
        [0, 1, 1, 0],
        [0, 0, 0, 0],
      ],
    ],
  },
  Z: {
    shape: [
      [
        [1, 1, 0],
        [0, 1, 1],
        [0, 0, 0],
      ],
      [
        [0, 0, 1],
        [0, 1, 1],
        [0, 1, 0],
      ],
      [
        [0, 0, 0],
        [1, 1, 0],
        [0, 1, 1],
      ],
      [
        [0, 1, 0],
        [1, 1, 0],
        [1, 0, 0],
      ],
    ],
  },
  T: {
    shape: [
      [
        [0, 0, 0, 0, 0],
        [0, 0, 1, 0, 0],
        [0, 1, 1, 1, 0],
        [0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0],
      ],
      [
        [0, 0, 0, 0, 0],
        [0, 0, 1, 0, 0],
        [0, 0, 1, 1, 0],
        [0, 0, 1, 0, 0],
        [0, 0, 0, 0, 0],
      ],
      [
        [0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0],
        [0, 1, 1, 1, 0],
        [0, 0, 1, 0, 0],
        [0, 0, 0, 0, 0],
      ],
      [
        [0, 0, 0, 0, 0],
        [0, 0, 1, 0, 0],
        [0, 1, 1, 0, 0],
        [0, 0, 1, 0, 0],
        [0, 0, 0, 0, 0],
      ],
    ],
  },
  J: {
    shape: [
      [
        [1, 0, 0],
        [1, 1, 1],
        [0, 0, 0],
      ],
      [
        [0, 1, 1],
        [0, 1, 0],
        [0, 1, 0],
      ],
      [
        [0, 0, 0],
        [1, 1, 1],
        [0, 0, 1],
      ],
      [
        [0, 1, 0],
        [0, 1, 0],
        [1, 1, 0],
      ],
    ],
  },
  S: {
    shape: [
      [
        [0, 0, 0, 0, 0],
        [0, 0, 1, 1, 0],
        [0, 1, 1, 0, 0],
        [0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0],
      ],
      [
        [0, 0, 0, 0, 0],
        [0, 0, 1, 0, 0],
        [0, 0, 1, 1, 0],
        [0, 0, 0, 1, 0],
        [0, 0, 0, 0, 0],
      ],
      [
        [0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0],
        [0, 0, 1, 1, 0],
        [0, 1, 1, 0, 0],
        [0, 0, 0, 0, 0],
      ],
      [
        [0, 0, 0, 0, 0],
        [0, 1, 0, 0, 0],
        [0, 1, 1, 0, 0],
        [0, 0, 1, 0, 0],
        [0, 0, 0, 0, 0],
      ],
    ],
  },
}
export const PENTOMINO_PIECES = {
  I: {
    shape: [
      [
        [0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0],
        [1, 2, 2, 2, 3, 0],
        [0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0],
      ],
      [
        [0, 0, 0, 4, 0, 0],
        [0, 0, 0, 5, 0, 0],
        [0, 0, 0, 5, 0, 0],
        [0, 0, 0, 5, 0, 0],
        [0, 0, 0, 6, 0, 0],
        [0, 0, 0, 0, 0, 0],
      ],
      [
        [0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0],
        [0, 1, 2, 2, 2, 3],
        [0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0],
      ],
      [
        [0, 0, 0, 0, 0, 0],
        [0, 0, 4, 0, 0, 0],
        [0, 0, 5, 0, 0, 0],
        [0, 0, 5, 0, 0, 0],
        [0, 0, 5, 0, 0, 0],
        [0, 0, 6, 0, 0, 0],
      ],
    ],
  },
  L: {
    shape: [
      [
        [0, 0, 1],
        [1, 1, 1],
        [1, 0, 0],
      ],
      [
        [1, 1, 0],
        [0, 1, 0],
        [0, 1, 1],
      ],
      [
        [0, 0, 1],
        [1, 1, 1],
        [1, 0, 0],
      ],
      [
        [1, 1, 0],
        [0, 1, 0],
        [0, 1, 1],
      ],
    ],
  },
  O: {
    shape: [
      [
        [0, 0, 0, 0],
        [0, 1, 1, 0],
        [0, 1, 1, 0],
        [0, 1, 0, 0],
      ],
      [
        [0, 0, 0, 0],
        [1, 1, 1, 0],
        [0, 1, 1, 0],
        [0, 0, 0, 0],
      ],
      [
        [0, 0, 1, 0],
        [0, 1, 1, 0],
        [0, 1, 1, 0],
        [0, 0, 0, 0],
      ],
      [
        [0, 0, 0, 0],
        [0, 1, 1, 0],
        [0, 1, 1, 1],
        [0, 0, 0, 0],
      ],
    ],
  },
  Z: {
    shape: [
      [
        [1, 1, 0],
        [0, 1, 1],
        [0, 0, 1],
      ],
      [
        [0, 0, 1],
        [0, 1, 1],
        [1, 1, 0],
      ],
      [
        [1, 0, 0],
        [1, 1, 0],
        [0, 1, 1],
      ],
      [
        [0, 1, 1],
        [1, 1, 0],
        [1, 0, 0],
      ],
    ],
  },
  T: {
    shape: [
      [
        [0, 0, 1, 0, 0],
        [0, 0, 1, 0, 0],
        [0, 1, 1, 1, 0],
        [0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0],
      ],
      [
        [0, 0, 0, 0, 0],
        [0, 0, 1, 0, 0],
        [0, 0, 1, 1, 1],
        [0, 0, 1, 0, 0],
        [0, 0, 0, 0, 0],
      ],
      [
        [0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0],
        [0, 1, 1, 1, 0],
        [0, 0, 1, 0, 0],
        [0, 0, 1, 0, 0],
      ],
      [
        [0, 0, 0, 0, 0],
        [0, 0, 1, 0, 0],
        [1, 1, 1, 0, 0],
        [0, 0, 1, 0, 0],
        [0, 0, 0, 0, 0],
      ],
    ],
  },
  J: {
    shape: [
      [
        [1, 0, 0],
        [1, 1, 1],
        [0, 1, 0],
      ],
      [
        [0, 1, 1],
        [1, 1, 0],
        [0, 1, 0],
      ],
      [
        [0, 1, 0],
        [1, 1, 1],
        [0, 0, 1],
      ],
      [
        [0, 1, 0],
        [0, 1, 1],
        [1, 1, 0],
      ],
    ],
  },
  S: {
    shape: [
      [
        [0, 0, 0, 0, 0],
        [0, 0, 1, 1, 0],
        [1, 1, 1, 0, 0],
        [0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0],
      ],
      [
        [0, 0, 1, 0, 0],
        [0, 0, 1, 0, 0],
        [0, 0, 1, 1, 0],
        [0, 0, 0, 1, 0],
        [0, 0, 0, 0, 0],
      ],
      [
        [0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0],
        [0, 0, 1, 1, 1],
        [0, 1, 1, 0, 0],
        [0, 0, 0, 0, 0],
      ],
      [
        [0, 0, 0, 0, 0],
        [0, 1, 0, 0, 0],
        [0, 1, 1, 0, 0],
        [0, 0, 1, 0, 0],
        [0, 0, 1, 0, 0],
      ],
    ],
  },
}
export const PIECE_SETS = {
  i: ["I"],
  standard: ["I", "L", "O", "Z", "T", "J", "S"],
  deluxe: ["I", "T", "Z", "S", "J", "L", "O"],
  standardUnfavored: ["O", "Z", "S"],
}
export const SPAWN_OFFSETS = {
  monomino: {
    downShift: 1,
    I: [3, -4],
    L: [4, -3],
    O: [3, -3],
    Z: [4, -2],
    T: [3, -4],
    J: [4, -2],
    S: [3, -4],
  },
  srs: {
    downShift: 1,
    I: [2, -3],
    L: [3, -2],
    O: [3, -3],
    Z: [3, -2],
    T: [2, -3],
    J: [3, -2],
    S: [2, -3],
  },
  retro: {
    downShift: 0,
    I: [2, -2],
    L: [4, -1],
    O: [3, -1],
    Z: [4, 0],
    T: [3, -2],
    J: [4, -1],
    S: [3, -1],
  },
  handheld: {
    downShift: 0,
    I: [2, -1],
    L: [3, 0],
    O: [3, 0],
    Z: [3, 1],
    T: [2, -1],
    J: [3, 0],
    S: [2, 0],
  },
  deluxe: {
    downShift: 0,
    I: [2, -2],
    L: [3, -1],
    O: [3, -1],
    Z: [3, 0],
    T: [2, -2],
    J: [3, -1],
    S: [2, -1],
  },
  ars: {
    downShift: 0,
    I: [2, -2],
    L: [3, -1],
    O: [3, -1],
    Z: [3, 0],
    T: [2, -2],
    J: [3, -1],
    S: [2, -1],
  },
}
SPAWN_OFFSETS.asc = SPAWN_OFFSETS.srs
SPAWN_OFFSETS.ascx = SPAWN_OFFSETS.srs
SPAWN_OFFSETS.tetrax = { ...SPAWN_OFFSETS.srs, downShift: 2, I: [2, -4] }
SPAWN_OFFSETS.oshisaure = { ...SPAWN_OFFSETS.srs, downShift: 0 }
SPAWN_OFFSETS.world = SPAWN_OFFSETS.srs
SPAWN_OFFSETS.arsti = SPAWN_OFFSETS.ars
SPAWN_OFFSETS.arsx = SPAWN_OFFSETS.ars
SPAWN_OFFSETS.original = SPAWN_OFFSETS.retro
SPAWN_OFFSETS.ace = SPAWN_OFFSETS.arsx
SPAWN_OFFSETS.aceworld = SPAWN_OFFSETS.world
SPAWN_OFFSETS.battle = SPAWN_OFFSETS.srs
SPAWN_OFFSETS.friends = SPAWN_OFFSETS.srs
SPAWN_OFFSETS.dshock = SPAWN_OFFSETS.srs
SPAWN_OFFSETS.krs = SPAWN_OFFSETS.arsx
SPAWN_OFFSETS.t99 = SPAWN_OFFSETS.srs
SPAWN_OFFSETS.ppt = SPAWN_OFFSETS.srs
SPAWN_OFFSETS.arsae = SPAWN_OFFSETS.srs
SPAWN_OFFSETS.worldae = SPAWN_OFFSETS.srs
SPAWN_OFFSETS.sega = SPAWN_OFFSETS.ars
SPAWN_OFFSETS.tonline = SPAWN_OFFSETS.srs
SPAWN_OFFSETS.srsx = SPAWN_OFFSETS.srs
SPAWN_OFFSETS.toj = SPAWN_OFFSETS.srs
SPAWN_OFFSETS.ksc = SPAWN_OFFSETS.srs
SPAWN_OFFSETS.newcentury = SPAWN_OFFSETS.srs
SPAWN_OFFSETS.party = SPAWN_OFFSETS.friends
SPAWN_OFFSETS.heboris = SPAWN_OFFSETS.ars

export const INITIAL_ORIENTATION = {
  srs: {
    I: 0,
    L: 0,
    O: 0,
    Z: 0,
    T: 0,
    J: 0,
    S: 0,
  },
  retro: {
    I: 0,
    L: 2,
    O: 0,
    Z: 0,
    T: 2,
    J: 2,
    S: 0,
  },
}
INITIAL_ORIENTATION.asc = INITIAL_ORIENTATION.srs
INITIAL_ORIENTATION.ascx = INITIAL_ORIENTATION.srs
INITIAL_ORIENTATION.tetrax = INITIAL_ORIENTATION.srs
INITIAL_ORIENTATION.world = INITIAL_ORIENTATION.srs
INITIAL_ORIENTATION.oshisaure = INITIAL_ORIENTATION.srs
INITIAL_ORIENTATION.handheld = INITIAL_ORIENTATION.retro
INITIAL_ORIENTATION.deluxe = INITIAL_ORIENTATION.retro
INITIAL_ORIENTATION.ars = INITIAL_ORIENTATION.retro
INITIAL_ORIENTATION.original = INITIAL_ORIENTATION.retro
INITIAL_ORIENTATION.arsti = INITIAL_ORIENTATION.ars
INITIAL_ORIENTATION.arsx = INITIAL_ORIENTATION.ars
INITIAL_ORIENTATION.ace = INITIAL_ORIENTATION.arsx
INITIAL_ORIENTATION.aceworld = INITIAL_ORIENTATION.world
INITIAL_ORIENTATION.battle = INITIAL_ORIENTATION.srs
INITIAL_ORIENTATION.friends = INITIAL_ORIENTATION.srs
INITIAL_ORIENTATION.dshock = INITIAL_ORIENTATION.srs
INITIAL_ORIENTATION.toj = INITIAL_ORIENTATION.srs
INITIAL_ORIENTATION.krs = INITIAL_ORIENTATION.arsx
INITIAL_ORIENTATION.t99 = INITIAL_ORIENTATION.srs
INITIAL_ORIENTATION.ppt = INITIAL_ORIENTATION.srs
INITIAL_ORIENTATION.arsae = INITIAL_ORIENTATION.arsx
INITIAL_ORIENTATION.worldae = INITIAL_ORIENTATION.world
INITIAL_ORIENTATION.sega = INITIAL_ORIENTATION.ars
INITIAL_ORIENTATION.tonline = INITIAL_ORIENTATION.srs
INITIAL_ORIENTATION.srsx = INITIAL_ORIENTATION.srs
INITIAL_ORIENTATION.ksc = INITIAL_ORIENTATION.srs
INITIAL_ORIENTATION.newcentury = INITIAL_ORIENTATION.srs
INITIAL_ORIENTATION.heboris = INITIAL_ORIENTATION.ars
INITIAL_ORIENTATION.party = INITIAL_ORIENTATION.friends

const KICK_TEMPLATES = {
  o: {
    right: [
      [
        [0, 0],
        [0, 1],
        [-1, 0],
        [0, -1],
        [1, 0],
      ],
      [
        [0, 0],
        [0, 1],
        [-1, 0],
        [0, -1],
        [1, 0],
      ],
      [
        [0, 0],
        [0, 1],
        [-1, 0],
        [0, -1],
        [1, 0],
      ],
      [
        [0, 0],
        [0, 1],
        [-1, 0],
        [0, -1],
        [1, 0],
      ],
    ],
    left: [
      [
        [0, 0],
        [-1, 0],
        [0, -1],
        [1, 0],
        [0, 1],
      ],
      [
        [0, 0],
        [-1, 0],
        [0, -1],
        [1, 0],
        [0, 1],
      ],
      [
        [0, 0],
        [-1, 0],
        [0, -1],
        [1, 0],
        [0, 1],
      ],
      [
        [0, 0],
        [-1, 0],
        [0, -1],
        [1, 0],
        [0, 1],
      ],
    ],
    double: [[[0, 0]], [[0, 0]], [[0, 0]], [[0, 0]]],
  },
  asc: {
    x: {
      right: [
        [
          [0, 0],
          [-1, 0],
          [0, +1],
          [-1, +1],
          [0, +2],
          [-1, +2],
          [-2, 0],
          [-2, +1],
          [-2, +2],
          [+1, 0],
          [+1, +1],
          [0, -1],
          [-1, -1],
          [-2, -1],
          [+1, -2],
          [+2, 0],
          [0, -2],
          [-1, -2],
          [-2, -2],
          [+2, -2],
        ],
        [
          [0, 0],
          [-1, 0],
          [0, +1],
          [-1, +1],
          [0, +2],
          [-1, +2],
          [-2, 0],
          [-2, +1],
          [-2, +2],
          [+1, 0],
          [+1, +1],
          [0, -1],
          [-1, -1],
          [-2, -1],
          [+1, -2],
          [+2, 0],
          [0, -2],
          [-1, -2],
          [-2, -2],
          [+2, -2],
        ],
        [
          [0, 0],
          [-1, 0],
          [0, +1],
          [-1, +1],
          [0, +2],
          [-1, +2],
          [-2, 0],
          [-2, +1],
          [-2, +2],
          [+1, 0],
          [+1, +1],
          [0, -1],
          [-1, -1],
          [-2, -1],
          [+1, -2],
          [+2, 0],
          [0, -2],
          [-1, -2],
          [-2, -2],
          [+2, -2],
        ],
        [
          [0, 0],
          [-1, 0],
          [0, +1],
          [-1, +1],
          [0, +2],
          [-1, +2],
          [-2, 0],
          [-2, +1],
          [-2, +2],
          [+1, 0],
          [+1, +1],
          [0, -1],
          [-1, -1],
          [-2, -1],
          [+1, -2],
          [+2, 0],
          [0, -2],
          [-1, -2],
          [-2, -2],
          [+2, -2],
        ],
      ],
      left: [
        [
          [0, 0],
          [+1, 0],
          [0, +1],
          [+1, +1],
          [0, +2],
          [+1, +2],
          [+2, 0],
          [+2, +1],
          [+2, +2],
          [-1, 0],
          [-1, +1],
          [0, -1],
          [+1, -1],
          [+2, -1],
          [-1, -2],
          [-2, 0],
          [0, -2],
          [+1, -2],
          [+2, -2],
          [-2, -2],
        ],
        [
          [0, 0],
          [+1, 0],
          [0, +1],
          [+1, +1],
          [0, +2],
          [+1, +2],
          [+2, 0],
          [+2, +1],
          [+2, +2],
          [-1, 0],
          [-1, +1],
          [0, -1],
          [+1, -1],
          [+2, -1],
          [-1, -2],
          [-2, 0],
          [0, -2],
          [+1, -2],
          [+2, -2],
          [-2, -2],
        ],
        [
          [0, 0],
          [+1, 0],
          [0, +1],
          [+1, +1],
          [0, +2],
          [+1, +2],
          [+2, 0],
          [+2, +1],
          [+2, +2],
          [-1, 0],
          [-1, +1],
          [0, -1],
          [+1, -1],
          [+2, -1],
          [-1, -2],
          [-2, 0],
          [0, -2],
          [+1, -2],
          [+2, -2],
          [-2, -2],
        ],
        [
          [0, 0],
          [+1, 0],
          [0, +1],
          [+1, +1],
          [0, +2],
          [+1, +2],
          [+2, 0],
          [+2, +1],
          [+2, +2],
          [-1, 0],
          [-1, +1],
          [0, -1],
          [+1, -1],
          [+2, -1],
          [-1, -2],
          [-2, 0],
          [0, -2],
          [+1, -2],
          [+2, -2],
          [-2, -2],
        ],
      ],
      double: [[[0, 0]], [[0, 0]], [[0, 0]], [[0, 0]]],
    },
  },
  ascx: {
    x: {
      right: [
        [
          [0, 0],
          [-1, 0],
          [0, +1],
          [-1, +1],
          [0, +2],
          [-1, +2],
          [-2, 0],
          [-2, +1],
          [-2, +2],
          [+1, 0],
          [+1, +1],
          [0, -1],
          [-1, -1],
          [-2, -1],
          [+1, -2],
          [+2, 0],
          [0, -2],
          [-1, -2],
          [-2, -2],
          [+2, -2],
        ],
        [
          [0, 0],
          [-1, 0],
          [0, +1],
          [-1, +1],
          [0, +2],
          [-1, +2],
          [-2, 0],
          [-2, +1],
          [-2, +2],
          [+1, 0],
          [+1, +1],
          [0, -1],
          [-1, -1],
          [-2, -1],
          [+1, -2],
          [+2, 0],
          [0, -2],
          [-1, -2],
          [-2, -2],
          [+2, -2],
        ],
        [
          [0, 0],
          [-1, 0],
          [0, +1],
          [-1, +1],
          [0, +2],
          [-1, +2],
          [-2, 0],
          [-2, +1],
          [-2, +2],
          [+1, 0],
          [+1, +1],
          [0, -1],
          [-1, -1],
          [-2, -1],
          [+1, -2],
          [+2, 0],
          [0, -2],
          [-1, -2],
          [-2, -2],
          [+2, -2],
        ],
        [
          [0, 0],
          [-1, 0],
          [0, +1],
          [-1, +1],
          [0, +2],
          [-1, +2],
          [-2, 0],
          [-2, +1],
          [-2, +2],
          [+1, 0],
          [+1, +1],
          [0, -1],
          [-1, -1],
          [-2, -1],
          [+1, -2],
          [+2, 0],
          [0, -2],
          [-1, -2],
          [-2, -2],
          [+2, -2],
        ],
      ],
      left: [
        [
          [0, 0],
          [+1, 0],
          [0, +1],
          [+1, +1],
          [0, +2],
          [+1, +2],
          [+2, 0],
          [+2, +1],
          [+2, +2],
          [-1, 0],
          [-1, +1],
          [0, -1],
          [+1, -1],
          [+2, -1],
          [-1, -2],
          [-2, 0],
          [0, -2],
          [+1, -2],
          [+2, -2],
          [-2, -2],
        ],
        [
          [0, 0],
          [+1, 0],
          [0, +1],
          [+1, +1],
          [0, +2],
          [+1, +2],
          [+2, 0],
          [+2, +1],
          [+2, +2],
          [-1, 0],
          [-1, +1],
          [0, -1],
          [+1, -1],
          [+2, -1],
          [-1, -2],
          [-2, 0],
          [0, -2],
          [+1, -2],
          [+2, -2],
          [-2, -2],
        ],
        [
          [0, 0],
          [+1, 0],
          [0, +1],
          [+1, +1],
          [0, +2],
          [+1, +2],
          [+2, 0],
          [+2, +1],
          [+2, +2],
          [-1, 0],
          [-1, +1],
          [0, -1],
          [+1, -1],
          [+2, -1],
          [-1, -2],
          [-2, 0],
          [0, -2],
          [+1, -2],
          [+2, -2],
          [-2, -2],
        ],
        [
          [0, 0],
          [+1, 0],
          [0, +1],
          [+1, +1],
          [0, +2],
          [+1, +2],
          [+2, 0],
          [+2, +1],
          [+2, +2],
          [-1, 0],
          [-1, +1],
          [0, -1],
          [+1, -1],
          [+2, -1],
          [-1, -2],
          [-2, 0],
          [0, -2],
          [+1, -2],
          [+2, -2],
          [-2, -2],
        ],
      ],
      double: [
        [
          [0, 0],
          [+1, 0],
          [+2, 0],
          [+1, +1],
          [+2, +1],
          [-1, 0],
          [-2, 0],
          [-1, +1],
          [-2, +1],
          [0, -1],
          [+3, 0],
          [-3, 0],
        ],
        [
          [0, 0],
          [0, +1],
          [0, +2],
          [-1, +1],
          [-1, +2],
          [0, -1],
          [0, -2],
          [-1, -1],
          [-1, -2],
          [+1, 0],
          [0, +3],
          [0, -3],
        ],
        [
          [0, 0],
          [-1, 0],
          [-2, 0],
          [-1, -1],
          [-2, -1],
          [+1, 0],
          [+2, 0],
          [+1, -1],
          [+2, -1],
          [0, +1],
          [-3, 0],
          [+3, 0],
        ],
        [
          [0, 0],
          [0, +1],
          [0, +2],
          [+1, +1],
          [+1, +2],
          [0, -1],
          [0, -2],
          [+1, -1],
          [+1, -2],
          [-1, 0],
          [0, +3],
          [0, -3],
        ],
      ],
    },
  },
  srs: {
    x: {
      right: [
        [
          [0, 0],
          [-1, 0],
          [-1, -1],
          [0, +2],
          [-1, +2],
        ], // 0 >> 1
        [
          [0, 0],
          [+1, 0],
          [+1, +1],
          [0, -2],
          [+1, -2],
        ], // 1 >> 2
        [
          [0, 0],
          [+1, 0],
          [+1, -1],
          [0, +2],
          [+1, +2],
        ], // 2 >> 3
        [
          [0, 0],
          [-1, 0],
          [-1, +1],
          [0, -2],
          [-1, -2],
        ], // 3 >> 0
      ],
      left: [
        [
          [0, 0],
          [+1, 0],
          [+1, -1],
          [0, +2],
          [+1, +2],
        ], // 0 >> 3
        [
          [0, 0],
          [+1, 0],
          [+1, +1],
          [0, -2],
          [+1, -2],
        ], // 1 >> 0
        [
          [0, 0],
          [-1, 0],
          [-1, -1],
          [0, +2],
          [-1, +2],
        ], // 2 >> 1
        [
          [0, 0],
          [-1, 0],
          [-1, +1],
          [0, -2],
          [-1, -2],
        ], // 3 >> 2
      ],
      double: [
        [
          [0, 0],
          [+1, 0],
          [+2, 0],
          [+1, +1],
          [+2, +1],
          [-1, 0],
          [-2, 0],
          [-1, +1],
          [-2, +1],
          [0, -1],
          [+3, 0],
          [-3, 0],
        ],
        [
          [0, 0],
          [0, +1],
          [0, +2],
          [-1, +1],
          [-1, +2],
          [0, -1],
          [0, -2],
          [-1, -1],
          [-1, -2],
          [+1, 0],
          [0, +3],
          [0, -3],
        ],
        [
          [0, 0],
          [-1, 0],
          [-2, 0],
          [-1, -1],
          [-2, -1],
          [+1, 0],
          [+2, 0],
          [+1, -1],
          [+2, -1],
          [0, +1],
          [-3, 0],
          [+3, 0],
        ],
        [
          [0, 0],
          [0, +1],
          [0, +2],
          [+1, +1],
          [+1, +2],
          [0, -1],
          [0, -2],
          [+1, -1],
          [+1, -2],
          [-1, 0],
          [0, +3],
          [0, -3],
        ],
      ],
    },
    I: {
      right: [
        [
          [0, 0],
          [-2, 0],
          [+1, 0],
          [-2, +1],
          [+1, -2],
        ],
        [
          [0, 0],
          [-1, 0],
          [+2, 0],
          [-1, -2],
          [+2, +1],
        ],
        [
          [0, 0],
          [+2, 0],
          [-1, 0],
          [+2, -1],
          [-1, +2],
        ],
        [
          [0, 0],
          [+1, 0],
          [-2, 0],
          [+1, +2],
          [-2, -1],
        ],
      ],
      left: [
        [
          [0, 0],
          [-1, 0],
          [+2, 0],
          [-1, -2],
          [+2, +1],
        ],
        [
          [0, 0],
          [+2, 0],
          [-1, 0],
          [+2, -1],
          [-1, +2],
        ],
        [
          [0, 0],
          [+1, 0],
          [-2, 0],
          [+1, +2],
          [-2, -1],
        ],
        [
          [0, 0],
          [-2, 0],
          [+1, 0],
          [-2, +1],
          [+1, -2],
        ],
      ],

      double: [
        [
          [0, 0],
          [-1, 0],
          [-2, 0],
          [+1, 0],
          [+2, 0],
          [0, +1],
        ],
        [
          [0, 0],
          [0, +1],
          [0, +2],
          [0, -1],
          [0, -2],
          [-1, 0],
        ],
        [
          [0, 0],
          [+1, 0],
          [+2, 0],
          [-1, 0],
          [-2, 0],
          [0, -1],
        ],
        [
          [0, 0],
          [0, +1],
          [0, +2],
          [0, -1],
          [0, -2],
          [+1, 0],
        ],
      ],
    },
  },
  tetrax: {
    x: {
      right: [
        [
          [0, 0],
          [0, +1],
          [-1, 0],
          [+1, 0],
          [-1, +1],
          [+1, +1],
          [0, -1],
          [-1, -1],
          [+1, -1],
        ], // 0 >> 1
        [
          [0, 0],
          [0, +1],
          [-1, 0],
          [+1, 0],
          [-1, +1],
          [+1, +1],
          [0, -1],
          [-1, -1],
          [+1, -1],
        ], // 1 >> 2
        [
          [0, 0],
          [0, +1],
          [-1, 0],
          [+1, 0],
          [-1, +1],
          [+1, +1],
          [0, -1],
          [-1, -1],
          [+1, -1],
        ], // 2 >> 3
        [
          [0, 0],
          [0, +1],
          [-1, 0],
          [+1, 0],
          [-1, +1],
          [+1, +1],
          [0, -1],
          [-1, -1],
          [+1, -1],
        ], // 3 >> 0
      ],
      left: [
        [
          [0, 0],
          [0, +1],
          [+1, 0],
          [-1, 0],
          [+1, +1],
          [-1, +1],
          [0, -1],
          [+1, -1],
          [-1, -1],
        ], // 0 >> 3
        [
          [0, 0],
          [0, +1],
          [+1, 0],
          [-1, 0],
          [+1, +1],
          [-1, +1],
          [0, -1],
          [+1, -1],
          [-1, -1],
        ], // 1 >> 0
        [
          [0, 0],
          [0, +1],
          [+1, 0],
          [-1, 0],
          [+1, +1],
          [-1, +1],
          [0, -1],
          [+1, -1],
          [-1, -1],
        ], // 2 >> 1
        [
          [0, 0],
          [0, +1],
          [+1, 0],
          [-1, 0],
          [+1, +1],
          [-1, +1],
          [0, -1],
          [+1, -1],
          [-1, -1],
        ], // 3 >> 2
      ],
      double: [
        [
          [0, 0],
          [0, +1],
          [0, -1],
          [-1, 0],
          [+1, 0],
        ], // 0 >> 2
        [
          [0, 0],
          [0, +1],
          [0, -1],
          [-1, 0],
          [+1, 0],
        ], // 1 >> 3
        [
          [0, 0],
          [0, +1],
          [0, -1],
          [-1, 0],
          [+1, 0],
        ], // 2 >> 0
        [
          [0, 0],
          [0, +1],
          [0, -1],
          [-1, 0],
          [+1, 0],
        ], // 3 >> 1
      ],
    },
    I: {
      right: [
        [
          [0, 0],
          [0, -1],
          [0, -2],
          [0, +1],
          [+1, -1],
          [-1, -1],
          [+1, -2],
          [-1, -2],
        ], // 0 >> 1
        [
          [0, 0],
          [0, -1],
          [0, -2],
          [0, +1],
          [-1, 0],
          [+1, 0],
          [+2, 0],
        ], // 1 >> 2
        [
          [0, 0],
          [0, +1],
          [0, +2],
          [0, -1],
          [+1, +1],
          [-1, +1],
          [+1, +2],
          [-1, +2],
        ], // 2 >> 3
        [
          [0, 0],
          [0, -1],
          [0, -2],
          [0, +1],
          [+1, 0],
          [-1, 0],
          [-2, 0],
        ], // 3 >> 0
      ],
      left: [
        [
          [0, 0],
          [0, -1],
          [0, -2],
          [0, +1],
          [-1, -1],
          [+1, -1],
          [-1, -2],
          [+1, -2],
        ], // 0 >> 3
        [
          [0, 0],
          [0, -1],
          [0, -2],
          [0, +1],
          [-1, 0],
          [+1, 0],
          [+2, 0],
        ], // 1 >> 0
        [
          [0, 0],
          [0, +1],
          [0, +2],
          [0, -1],
          [-1, +1],
          [+1, +1],
          [-1, +2],
          [+1, +2],
        ], // 2 >> 1
        [
          [0, 0],
          [0, -1],
          [0, -2],
          [0, +1],
          [+1, 0],
          [-1, 0],
          [-2, 0],
        ], // 3 >> 2
      ],
      double: [
        [
          [0, 0],
          [0, -1],
          [0, +1],
        ], // 0 >> 2
        [
          [0, 0],
          [0, -1],
          [0, +1],
        ], // 1 >> 3
        [
          [0, 0],
          [0, -1],
          [0, +1],
        ], // 2 >> 0
        [
          [0, 0],
          [0, -1],
          [0, +1],
        ], // 3 >> 1
      ],
    },
  },
  deluxe: {
    TLJ: {
      right: [
        [
          [0, 0],
          [+1, +1],
        ], // 0 >> 1
        [
          [0, 0],
          [-1, +1],
        ], // 1 >> 2
        [
          [0, 0],
          [-1, -1],
        ], // 2 >> 3
        [
          [0, 0],
          [+1, -1],
        ], // 3 >> 0
      ],
      left: [
        [
          [0, 0],
          [-1, +1],
        ], // 0 >> 3
        [
          [0, 0],
          [+1, +1],
        ], // 3 >> 2
        [
          [0, 0],
          [+1, -1],
        ], // 2 >> 1
        [
          [0, 0],
          [-1, -1],
        ], // 1 >> 0
      ],
      double: [
        [
          [0, 0],
          [0, -2],
        ], // 0 >> 2
        [
          [0, 0],
          [-2, 0],
        ], // 1 >> 3
        [
          [0, 0],
          [0, +2],
        ], // 2 >> 0
        [
          [0, 0],
          [+2, 0],
        ], // 3 >> 1
      ],
    },
    x: {
      right: [
        [
          [0, 0],
          [-1, -1],
        ], // 0 >> 1
        [
          [0, 0],
          [+1, -1],
        ], // 1 >> 2
        [
          [0, 0],
          [+1, +1],
        ], // 2 >> 3
        [
          [0, 0],
          [-1, +1],
        ], // 3 >> 0
      ],
      left: [
        [
          [0, 0],
          [+1, -1],
        ], // 0 >> 3
        [
          [0, 0],
          [+1, +1],
        ], // 1 >> 0
        [
          [0, 0],
          [-1, +1],
        ], // 2 >> 1
        [
          [0, 0],
          [-1, -1],
        ], // 3 >> 2
      ],
      double: [
        [
          [0, 0],
          [0, +2],
        ], // 0 >> 2
        [
          [0, 0],
          [+2, 0],
        ], // 1 >> 3
        [
          [0, 0],
          [0, -2],
        ], // 2 >> 0
        [
          [0, 0],
          [-2, 0],
        ], // 3 >> 1
      ],
    },
  },
  ars: {
    x: {
      right: [
        [
          [0, 0],
          [1, 0],
          [-1, 0],
        ],
        [
          [0, 0],
          [1, 0],
          [-1, 0],
        ],
        [
          [0, 0],
          [1, 0],
          [-1, 0],
        ],
        [
          [0, 0],
          [1, 0],
          [-1, 0],
        ],
      ],
      left: [
        [
          [0, 0],
          [1, 0],
          [-1, 0],
        ],
        [
          [0, 0],
          [1, 0],
          [-1, 0],
        ],
        [
          [0, 0],
          [1, 0],
          [-1, 0],
        ],
        [
          [0, 0],
          [1, 0],
          [-1, 0],
        ],
      ],
      double: [
        [
          [0, 0],
          [1, 0],
          [-1, 0],
        ],
        [
          [0, 0],
          [1, 0],
          [-1, 0],
        ],
        [
          [0, 0],
          [1, 0],
          [-1, 0],
        ],
        [
          [0, 0],
          [1, 0],
          [-1, 0],
        ],
      ],
    },
    I: {
      right: [
        [
          [0, 0],
          [0, -1],
          [0, -2],
        ],
        [
          [0, 0],
          [1, 0],
          [2, 0],
          [-1, 0],
        ],
        [
          [0, 0],
          [0, -1],
          [0, -2],
        ],
        [
          [0, 0],
          [1, 0],
          [2, 0],
          [-1, 0],
        ],
      ],
      left: [
        [
          [0, 0],
          [0, -1],
          [0, -2],
        ],
        [
          [0, 0],
          [1, 0],
          [2, 0],
          [-1, 0],
        ],
        [
          [0, 0],
          [0, -1],
          [0, -2],
        ],
        [
          [0, 0],
          [1, 0],
          [2, 0],
          [-1, 0],
        ],
      ],
      double: [[[0, 0]], [[0, 0]], [[0, 0]], [[0, 0]]],
    },
    T: {
      right: [
        [
          [0, 0],
          [1, 0],
          [-1, 0],
        ],
        [
          [0, 0],
          [1, 0],
          [-1, 0],
        ],
        [
          [0, 0],
          [1, 0],
          [-1, 0],
        ],
        [
          [0, 0],
          [1, 0],
          [-1, 0],
          [0, -1],
        ],
      ],
      left: [
        [
          [0, 0],
          [1, 0],
          [-1, 0],
        ],
        [
          [0, 0],
          [1, 0],
          [-1, 0],
          [0, -1],
        ],
        [
          [0, 0],
          [1, 0],
          [-1, 0],
        ],
        [
          [0, 0],
          [1, 0],
          [-1, 0],
        ],
      ],
      double: [
        [
          [0, 0],
          [1, 0],
          [-1, 0],
        ],
        [
          [0, 0],
          [1, 0],
          [-1, 0],
        ],
        [
          [0, 0],
          [1, 0],
          [-1, 0],
          [0, -1],
        ],
        [
          [0, 0],
          [1, 0],
          [-1, 0],
        ],
      ],
    },
  },
  arsx: {
    x: {
      right: [
        [
          [0, 0],
          [-1, 0],
          [1, 0],
        ],
        [
          [0, 0],
          [-1, 0],
          [1, 0],
        ],
        [
          [0, 0],
          [-1, 0],
          [1, 0],
        ],
        [
          [0, 0],
          [-1, 0],
          [1, 0],
        ],
      ],
      left: [
        [
          [0, 0],
          [1, 0],
          [-1, 0],
        ],
        [
          [0, 0],
          [1, 0],
          [-1, 0],
        ],
        [
          [0, 0],
          [1, 0],
          [-1, 0],
        ],
        [
          [0, 0],
          [1, 0],
          [-1, 0],
        ],
      ],
      double: [
        [
          [0, 0],
          [1, 0],
          [-1, 0],
        ],
        [
          [0, 0],
          [1, 0],
          [-1, 0],
        ],
        [
          [0, 0],
          [-1, 0],
          [1, 0],
        ],
        [
          [0, 0],
          [-1, 0],
          [1, 0],
        ],
      ],
    },
    I: {
      right: [
        [
          [0, 0],
          [0, -1],
          [0, -2],
        ],
        [
          [0, 0],
          [-1, 0],
          [1, 0],
          [2, 0],
        ],
        [
          [0, 0],
          [0, -1],
          [0, -2],
        ],
        [
          [0, 0],
          [-1, 0],
          [-2, 0],
          [1, 0],
        ],
      ],
      left: [
        [
          [0, 0],
          [0, -1],
          [0, -2],
        ],
        [
          [0, 0],
          [1, 0],
          [2, 0],
          [-1, 0],
        ],
        [
          [0, 0],
          [0, -1],
          [0, -2],
        ],
        [
          [0, 0],
          [1, 0],
          [-1, 0],
          [-2, 0],
        ],
      ],
      double: [[[0, 0]], [[0, 0]], [[0, 0]], [[0, 0]]],
    },
    T: {
      right: [
        [
          [0, 0],
          [1, 0],
          [-1, 0],
        ],
        [
          [0, 0],
          [1, 0],
          [-1, 0],
        ],
        [
          [0, 0],
          [1, 0],
          [-1, 0],
        ],
        [
          [0, 0],
          [1, 0],
          [-1, 0],
          [0, -1],
        ],
      ],
      left: [
        [
          [0, 0],
          [-1, 0],
          [1, 0],
        ],
        [
          [0, 0],
          [-1, 0],
          [1, 0],
          [0, -1],
        ],
        [
          [0, 0],
          [-1, 0],
          [1, 0],
        ],
        [
          [0, 0],
          [-1, 0],
          [1, 0],
        ],
      ],
      double: [
        [
          [0, 0],
          [1, 0],
          [-1, 0],
        ],
        [
          [0, 0],
          [1, 0],
          [-1, 0],
        ],
        [
          [0, 0],
          [-1, 0],
          [1, 0],
          [0, -1],
        ],
        [
          [0, 0],
          [-1, 0],
          [1, 0],
        ],
      ],
    },
  },
  oshisaure: {
    x: {
      right: [
        [
          [0, 0],
          [0, 1],
          [-1, 0],
          [1, 0],
          [-1, 1],
          [1, 1],
          [0, -1],
          [-1, -1],
          [1, -1],
          [0, 2],
          [0, -2],
        ],
        [
          [0, 0],
          [0, 1],
          [-1, 0],
          [1, 0],
          [-1, 1],
          [1, 1],
          [0, -1],
          [-1, -1],
          [1, -1],
          [0, 2],
          [0, -2],
        ],
        [
          [0, 0],
          [0, 1],
          [-1, 0],
          [1, 0],
          [-1, 1],
          [1, 1],
          [0, -1],
          [-1, -1],
          [1, -1],
          [0, 2],
          [0, -2],
        ],
        [
          [0, 0],
          [0, 1],
          [-1, 0],
          [1, 0],
          [-1, 1],
          [1, 1],
          [0, -1],
          [-1, -1],
          [1, -1],
          [0, 2],
          [0, -2],
        ],
      ],
      left: [
        [
          [0, 0],
          [0, 1],
          [1, 0],
          [-1, 0],
          [1, 1],
          [-1, 1],
          [0, -1],
          [1, -1],
          [-1, -1],
          [0, 2],
          [0, -2],
        ],
        [
          [0, 0],
          [0, 1],
          [1, 0],
          [-1, 0],
          [1, 1],
          [-1, 1],
          [0, -1],
          [1, -1],
          [-1, -1],
          [0, 2],
          [0, -2],
        ],
        [
          [0, 0],
          [0, 1],
          [1, 0],
          [-1, 0],
          [1, 1],
          [-1, 1],
          [0, -1],
          [1, -1],
          [-1, -1],
          [0, 2],
          [0, -2],
        ],
        [
          [0, 0],
          [0, 1],
          [1, 0],
          [-1, 0],
          [1, 1],
          [-1, 1],
          [0, -1],
          [1, -1],
          [-1, -1],
          [0, 2],
          [0, -2],
        ],
      ],
      double: [
        [
          [0, 0],
          [0, 1],
          [-1, 0],
          [1, 0],
          [-1, 1],
          [1, 1],
          [0, -1],
          [-1, -1],
          [1, -1],
          [0, 2],
          [0, -2],
        ],
        [
          [0, 0],
          [0, 1],
          [1, 0],
          [-1, 0],
          [1, 1],
          [-1, 1],
          [0, -1],
          [1, -1],
          [-1, -1],
          [0, 2],
          [0, -2],
        ],
        [
          [0, 0],
          [0, 1],
          [1, 0],
          [-1, 0],
          [1, 1],
          [-1, 1],
          [0, -1],
          [1, -1],
          [-1, -1],
          [0, 2],
          [0, -2],
        ],
        [
          [0, 0],
          [0, 1],
          [-1, 0],
          [1, 0],
          [-1, 1],
          [1, 1],
          [0, -1],
          [-1, -1],
          [1, -1],
          [0, 2],
          [0, -2],
        ],
      ],
    },
    I: {
      right: [
        [
          [0, 0],
          [0, 1],
          [1, 0],
          [1, 1],
          [0, -1],
          [1, -1],
          [0, 2],
          [1, 2],
          [-1, 0],
          [-1, 1],
          [-2, 0],
          [-2, 1],
          [-1, -1],
          [-2, -1],
          [-1, 2],
          [-2, 2],
        ],
        [
          [1, 0],
          [1, 1],
          [2, 0],
          [2, 1],
          [1, -1],
          [2, -1],
          [1, -2],
          [2, -2],
          [0, 0],
          [0, 1],
          [-1, 0],
          [-1, 1],
          [0, -1],
          [-1, -1],
          [0, -2],
          [-1, -2],
        ],
        [
          [0, 0],
          [0, 1],
          [1, 0],
          [1, 1],
          [0, -1],
          [1, -1],
          [0, 2],
          [1, 2],
          [-1, 0],
          [-1, 1],
          [-2, 0],
          [-2, 1],
          [-1, -1],
          [-2, -1],
          [-1, 2],
          [-2, 2],
        ],
        [
          [1, 0],
          [1, 1],
          [2, 0],
          [2, 1],
          [1, -1],
          [2, -1],
          [1, -2],
          [2, -2],
          [0, 0],
          [0, 1],
          [-1, 0],
          [-1, 1],
          [0, -1],
          [-1, -1],
          [0, -2],
          [-1, -2],
        ],
      ],
      left: [
        [
          [-1, 0],
          [-1, 1],
          [-2, 0],
          [-2, 1],
          [-1, -1],
          [-2, -1],
          [-1, 2],
          [-2, 2],
          [0, 0],
          [0, 1],
          [1, 0],
          [1, 1],
          [0, -1],
          [1, -1],
          [0, 2],
          [1, 2],
        ],
        [
          [0, 0],
          [0, 1],
          [-1, 0],
          [-1, 1],
          [0, -1],
          [-1, -1],
          [0, -2],
          [-1, -2],
          [1, 0],
          [1, 1],
          [2, 0],
          [2, 1],
          [1, -1],
          [2, -1],
          [1, -2],
          [2, -2],
        ],
        [
          [-1, 0],
          [-1, 1],
          [-2, 0],
          [-2, 1],
          [-1, -1],
          [-2, -1],
          [-1, 2],
          [-2, 2],
          [0, 0],
          [0, 1],
          [1, 0],
          [1, 1],
          [0, -1],
          [1, -1],
          [0, 2],
          [1, 2],
        ],
        [
          [0, 0],
          [0, 1],
          [-1, 0],
          [-1, 1],
          [0, -1],
          [-1, -1],
          [0, -2],
          [-1, -2],
          [1, 0],
          [1, 1],
          [2, 0],
          [2, 1],
          [1, -1],
          [2, -1],
          [1, -2],
          [2, -2],
        ],
      ],
      double: [[[0, 0]], [[0, 0]], [[0, 0]], [[0, 0]]],
    },
  },
  sega: {
    x: {
      right: [
        [
          [0, 0],
          [1, 0],
          [-1, 0],
        ],
        [
          [0, 0],
          [1, 0],
          [-1, 0],
        ],
        [
          [0, 0],
          [1, 0],
          [-1, 0],
        ],
        [
          [0, 0],
          [1, 0],
          [-1, 0],
        ],
      ],
      left: [
        [
          [0, 0],
          [1, 0],
          [-1, 0],
        ],
        [
          [0, 0],
          [1, 0],
          [-1, 0],
        ],
        [
          [0, 0],
          [1, 0],
          [-1, 0],
        ],
        [
          [0, 0],
          [1, 0],
          [-1, 0],
        ],
      ],
      double: [
        [
          [0, 0],
          [1, 0],
          [-1, 0],
        ],
        [
          [0, 0],
          [1, 0],
          [-1, 0],
        ],
        [
          [0, 0],
          [1, 0],
          [-1, 0],
        ],
        [
          [0, 0],
          [1, 0],
          [-1, 0],
        ],
      ],
    },
    I: {
      right: [
        [
          [0, 0],
          [0, -1],
          [0, -2],
        ],
        [
          [0, 0],
          [1, 0],
          [2, 0],
          [-1, 0],
        ],
        [
          [0, 0],
          [0, -1],
          [0, -2],
        ],
        [
          [0, 0],
          [1, 0],
          [2, 0],
          [-1, 0],
        ],
      ],
      left: [
        [
          [0, 0],
          [0, -1],
          [0, -2],
        ],
        [
          [0, 0],
          [1, 0],
          [2, 0],
          [-1, 0],
        ],
        [
          [0, 0],
          [0, -1],
          [0, -2],
        ],
        [
          [0, 0],
          [1, 0],
          [2, 0],
          [-1, 0],
        ],
      ],
      double: [[[0, 0]], [[0, 0]], [[0, 0]], [[0, 0]]],
    },
  },
  none: {
    all: {
      right: [[[0, 0]], [[0, 0]], [[0, 0]], [[0, 0]]],
      left: [[[0, 0]], [[0, 0]], [[0, 0]], [[0, 0]]],
      double: [[[0, 0]], [[0, 0]], [[0, 0]], [[0, 0]]],
    },
  },
}
KICK_TEMPLATES.world = {
  x: {
    ...KICK_TEMPLATES.srs.x,
    double: [
      [
        [0, 0],
        [1, 0],
        [-1, 0],
        [0, -1],
        [0, 1],
        [0, -2],
        [0, 2],
      ],
      [
        [0, 0],
        [0, 1],
        [0, -1],
        [0, -2],
        [0, 2],
        [-1, 0],
        [1, 0],
      ],
      [
        [0, 0],
        [-1, 0],
        [1, 0],
        [0, 1],
        [0, -1],
        [0, 2],
        [0, -2],
      ],
      [
        [0, 0],
        [0, 1],
        [0, -1],
        [0, -2],
        [0, 2],
        [1, 0],
        [-1, 0],
      ],
    ],
  },
  I: {
    right: [
      [
        [0, 0],
        [-2, 0],
        [1, 0],
        [1, -2],
        [-2, 1],
      ], // 0>>1
      [
        [0, 0],
        [-1, 0],
        [2, 0],
        [-1, -2],
        [2, 1],
      ], //  1>>2
      [
        [0, 0],
        [2, 0],
        [-1, 0],
        [2, -1],
        [-1, 1],
      ], //  2>>3
      [
        [0, 0],
        [-2, 0],
        [1, 0],
        [-2, -1],
        [1, 2],
      ], //  3>>0
    ],
    left: [
      [
        [0, 0],
        [2, 0],
        [-1, 0],
        [-1, -2],
        [2, 1],
      ], // 0>>3
      [
        [0, 0],
        [2, 0],
        [-1, 0],
        [2, -1],
        [-1, 2],
      ], //  1>>0
      [
        [0, 0],
        [-2, 0],
        [1, 0],
        [-2, -1],
        [1, 1],
      ], //  2>>1
      [
        [0, 0],
        [1, 0],
        [-2, 0],
        [1, -2],
        [-2, 1],
      ], //  3>>2
    ],
    double: [
      [
        [0, 0],
        [-1, 0],
        [-2, 0],
        [1, 0],
        [2, 0],
      ],
      [
        [0, 0],
        [0, 1],
        [0, -1],
        [0, -2],
        [0, 2],
      ],
      [
        [0, 0],
        [1, 0],
        [2, 0],
        [-1, 0],
        [-2, 0],
      ],
      [
        [0, 0],
        [0, 1],
        [0, -1],
        [0, -2],
        [0, 2],
      ],
    ],
  },
}

KICK_TEMPLATES.ace = KICK_TEMPLATES.arsx
KICK_TEMPLATES.aceworld = KICK_TEMPLATES.srs
KICK_TEMPLATES.battle = KICK_TEMPLATES.srs
KICK_TEMPLATES.friends = KICK_TEMPLATES.srs
KICK_TEMPLATES.dshock = KICK_TEMPLATES.srs
KICK_TEMPLATES.t99 = KICK_TEMPLATES.srs
KICK_TEMPLATES.ppt = KICK_TEMPLATES.srs
KICK_TEMPLATES.arsae = KICK_TEMPLATES.arsx
KICK_TEMPLATES.worldae = KICK_TEMPLATES.srs
KICK_TEMPLATES.srsx = KICK_TEMPLATES.srs
KICK_TEMPLATES.toj = KICK_TEMPLATES.srs
KICK_TEMPLATES.newcentury = KICK_TEMPLATES.srs
KICK_TEMPLATES.heboris = KICK_TEMPLATES.ars
KICK_TEMPLATES.party = KICK_TEMPLATES.friends
KICK_TEMPLATES.tonline = KICK_TEMPLATES.srs
KICK_TEMPLATES.krs = {
  x: {
	...KICK_TEMPLATES.ascx.x,
  },  
  LJ: {
	right: [
        [
          [0, 0],
          [-1, 0],
		  [1, 0]
          [0, +1],
          [-1, +1],
          [0, +2],
          [-1, +2],
          [-2, 0],
          [-2, +1],
          [-2, +2],
          [+1, 0],
          [+1, +1],
          [0, -1],
          [-1, -1],
          [-2, -1],
          [+1, -2],
          [+2, 0],
          [0, -2],
          [-1, -2],
          [-2, -2],
          [+2, -2],
        ],
        [
          [0, 0],
          [-1, 0],
          [1, 0],
          [0, +1],
          [-1, +1],
          [0, +2],
          [-1, +2],
          [-2, 0],
          [-2, +1],
          [-2, +2],
          [+1, 0],
          [+1, +1],
          [0, -1],
          [-1, -1],
          [-2, -1],
          [+1, -2],
          [+2, 0],
          [0, -2],
          [-1, -2],
          [-2, -2],
          [+2, -2],
        ],
        [
          [0, 0],
          [-1, 0],
          [1, 0],
          [0, +1],
          [-1, +1],
          [0, +2],
          [-1, +2],
          [-2, 0],
          [-2, +1],
          [-2, +2],
          [+1, 0],
          [+1, +1],
          [0, -1],
          [-1, -1],
          [-2, -1],
          [+1, -2],
          [+2, 0],
          [0, -2],
          [-1, -2],
          [-2, -2],
          [+2, -2],
        ],
        [
		  [0, 0],
          [-1, 0],
          [1, 0],
          [0, +1],
          [-1, +1],
          [0, +2],
          [-1, +2],
          [-2, 0],
          [-2, +1],
          [-2, +2],
          [+1, 0],
          [+1, +1],
          [0, -1],
          [-1, -1],
          [-2, -1],
          [+1, -2],
          [+2, 0],
          [0, -2],
          [-1, -2],
          [-2, -2],
          [+2, -2],
        ],
      ],
    left: [
        [
          [0, 0],
          [1, 0],
          [-1, 0],
          [0, 0],
          [+1, 0],
          [0, +1],
          [+1, +1],
          [0, +2],
          [+1, +2],
          [+2, 0],
          [+2, +1],
          [+2, +2],
          [-1, +1],
          [0, -1],
          [+1, -1],
          [+2, -1],
          [-1, -2],
          [-2, 0],
          [0, -2],
          [+1, -2],
          [+2, -2],
          [-2, -2],
        ],
        [
          [0, 0],
          [1, 0],
          [-1, 0],
          [0, 0],
          [+1, 0],
          [0, +1],
          [+1, +1],
          [0, +2],
          [+1, +2],
          [+2, 0],
          [+2, +1],
          [+2, +2],
          [-1, +1],
          [0, -1],
          [+1, -1],
          [+2, -1],
          [-1, -2],
          [-2, 0],
          [0, -2],
          [+1, -2],
          [+2, -2],
          [-2, -2],
        ],
        [
          [0, 0],
          [1, 0],
          [-1, 0],
          [0, 0],
          [+1, 0],
          [0, +1],
          [+1, +1],
          [0, +2],
          [+1, +2],
          [+2, 0],
          [+2, +1],
          [+2, +2],
          [-1, +1],
          [0, -1],
          [+1, -1],
          [+2, -1],
          [-1, -2],
          [-2, 0],
          [0, -2],
          [+1, -2],
          [+2, -2],
          [-2, -2],
        ],
        [
          [0, 0],
          [1, 0],
          [-1, 0],
          [0, 0],
          [+1, 0],
          [0, +1],
          [+1, +1],
          [0, +2],
          [+1, +2],
          [+2, 0],
          [+2, +1],
          [+2, +2],
          [-1, +1],
          [0, -1],
          [+1, -1],
          [+2, -1],
          [-1, -2],
          [-2, 0],
          [0, -2],
          [+1, -2],
          [+2, -2],
          [-2, -2],
        ],
      ],
	double: [
        [
		  [0, 0],
          [1, 0],
          [-1, 0],
          [+1, 0],
          [+2, 0],
          [+1, +1],
          [+2, +1],
          [-2, 0],
          [-1, +1],
          [-2, +1],
          [0, -1],
          [+3, 0],
          [-3, 0],
        ],
        [
		  [0, 0],
          [1, 0],
          [-1, 0],
          [0, +1],
          [0, +2],
          [-1, +1],
          [-1, +2],
          [0, -1],
          [0, -2],
          [-1, -1],
          [-1, -2],
          [+1, 0],
          [0, +3],
          [0, -3],
        ],
        [
		  [0, 0],
          [-1, 0],
          [1, 0],
          [-2, 0],
          [-1, -1],
          [-2, -1],
          [+1, 0],
          [+2, 0],
          [+1, -1],
          [+2, -1],
          [0, +1],
          [-3, 0],
          [+3, 0],
        ],
        [
		  [0, 0],
          [-1, 0],
          [1, 0],
          [0, +1],
          [0, +2],
          [+1, +1],
          [+1, +2],
          [0, -1],
          [0, -2],
          [+1, -1],
          [+1, -2],
          [0, +3],
          [0, -3],
        ],
      ],
  },
  I: {
	...KICK_TEMPLATES.ascx.x,
  },
  T: {
	right: [
        [
		  [0, 0],
          [1, 0],
          [-1, 0],
          [0, +1],
          [-1, +1],
          [0, +2],
          [-1, +2],
          [-2, 0],
          [-2, +1],
          [-2, +2],
          [+1, 0],
          [+1, +1],
          [0, -1],
          [-1, -1],
          [-2, -1],
          [+1, -2],
          [+2, 0],
          [0, -2],
          [-1, -2],
          [-2, -2],
          [+2, -2],
        ],
        [
		  [0, 0],
          [1, 0],
          [-1, 0],
          [0, +1],
          [-1, +1],
          [0, +2],
          [-1, +2],
          [-2, 0],
          [-2, +1],
          [-2, +2],
          [+1, 0],
          [+1, +1],
          [0, -1],
          [-1, -1],
          [-2, -1],
          [+1, -2],
          [+2, 0],
          [0, -2],
          [-1, -2],
          [-2, -2],
          [+2, -2],
        ],
        [
		  [0, 0],
          [1, 0],
          [-1, 0],
          [0, +1],
          [-1, +1],
          [0, +2],
          [-1, +2],
          [-2, 0],
          [-2, +1],
          [-2, +2],
          [+1, 0],
          [+1, +1],
          [0, -1],
          [-1, -1],
          [-2, -1],
          [+1, -2],
          [+2, 0],
          [0, -2],
          [-1, -2],
          [-2, -2],
          [+2, -2],
        ],
        [
		  [0, 0],
          [1, 0],
          [-1, 0],
          [0, -1],
          [0, +1],
          [-1, +1],
          [0, +2],
          [-1, +2],
          [-2, 0],
          [-2, +1],
          [-2, +2],
          [+1, 0],
          [+1, +1],
          [0, -1],
          [-1, -1],
          [-2, -1],
          [+1, -2],
          [+2, 0],
          [0, -2],
          [-1, -2],
          [-2, -2],
          [+2, -2],
        ],
      ],
    left: [
        [
		  [0, 0],
          [-1, 0],
          [1, 0],
          [+1, 0],
          [0, +1],
          [+1, +1],
          [0, +2],
          [+1, +2],
          [+2, 0],
          [+2, +1],
          [+2, +2],
          [-1, +1],
          [0, -1],
          [+1, -1],
          [+2, -1],
          [-1, -2],
          [-2, 0],
          [0, -2],
          [+1, -2],
          [+2, -2],
          [-2, -2],
        ],
        [
		  [0, 0],
          [-1, 0],
          [1, 0],
          [0, -1],
          [+1, 0],
          [0, +1],
          [+1, +1],
          [0, +2],
          [+1, +2],
          [+2, 0],
          [+2, +1],
          [+2, +2],
          [-1, +1],
          [0, -1],
          [+1, -1],
          [+2, -1],
          [-1, -2],
          [-2, 0],
          [0, -2],
          [+1, -2],
          [+2, -2],
          [-2, -2],
        ],
        [
		  [0, 0],
          [-1, 0],
          [1, 0],
          [+1, 0],
          [0, +1],
          [+1, +1],
          [0, +2],
          [+1, +2],
          [+2, 0],
          [+2, +1],
          [+2, +2],
          [-1, +1],
          [0, -1],
          [+1, -1],
          [+2, -1],
          [-1, -2],
          [-2, 0],
          [0, -2],
          [+1, -2],
          [+2, -2],
          [-2, -2],
        ],
        [
		  [0, 0],
          [-1, 0],
          [1, 0],
          [+1, 0],
          [0, +1],
          [+1, +1],
          [0, +2],
          [+1, +2],
          [+2, 0],
          [+2, +1],
          [+2, +2],
          [-1, +1],
          [0, -1],
          [+1, -1],
          [+2, -1],
          [-1, -2],
          [-2, 0],
          [0, -2],
          [+1, -2],
          [+2, -2],
          [-2, -2],
        ],
      ],
	double: [
        [
		  [0, 0],
          [1, 0],
          [-1, 0],
          [+1, 0],
          [+2, 0],
          [+1, +1],
          [+2, +1],
          [-2, 0],
          [-1, +1],
          [-2, +1],
          [0, -1],
          [+3, 0],
          [-3, 0],
        ],
        [
		  [0, 0],
          [1, 0],
          [-1, 0],
          [0, +1],
          [0, +2],
          [-1, +1],
          [-1, +2],
          [0, -1],
          [0, -2],
          [-1, -1],
          [-1, -2],
          [+1, 0],
          [0, +3],
          [0, -3],
        ],
        [
		  [0, 0],
          [-1, 0],
          [1, 0],
          [0, -1],
          [-2, 0],
          [-1, -1],
          [-2, -1],
          [+1, 0],
          [+2, 0],
          [+1, -1],
          [+2, -1],
          [0, +1],
          [-3, 0],
          [+3, 0],
        ],
        [
		  [0, 0],
          [-1, 0],
          [1, 0],
          [0, +1],
          [0, +2],
          [+1, +1],
          [+1, +2],
          [0, -1],
          [0, -2],
          [+1, -1],
          [+1, -2],
          [0, +3],
          [0, -3],
        ],
      ],
  },
  O: {
    ...KICK_TEMPLATES.ascx.x,
  },
}
KICK_TEMPLATES.ksc = {
  x: {
    right: {
		...KICK_TEMPLATES.srs.x.right,
		...KICK_TEMPLATES.asc.x.right,
	},
	left: {
		...KICK_TEMPLATES.srs.x.left,
		...KICK_TEMPLATES.asc.x.left,
	},
	double: {
		...KICK_TEMPLATES.srs.x.double,
		...KICK_TEMPLATES.asc.x.double,
	},
  },
  I: {
    right: {
		...KICK_TEMPLATES.srs.I.right,
		...KICK_TEMPLATES.asc.x.right,
	},
	left: {
		...KICK_TEMPLATES.srs.I.left,
		...KICK_TEMPLATES.asc.x.left,
	},
	double: {
		...KICK_TEMPLATES.srs.I.double,
		...KICK_TEMPLATES.asc.x.double,
	},
  },
  T: {
    right: {
		...KICK_TEMPLATES.srs.x.right,
		...KICK_TEMPLATES.asc.x.right,
	},
	left: {
		...KICK_TEMPLATES.srs.x.left,
		...KICK_TEMPLATES.asc.x.left,
	},
	double: {
		...KICK_TEMPLATES.srs.x.double,
		...KICK_TEMPLATES.asc.x.double,
	},
  },
  O: {
    ...KICK_TEMPLATES.asc.x,
  },
}

export const KICK_TABLES = {
  asc: {
    I: KICK_TEMPLATES.asc.x,
    L: KICK_TEMPLATES.asc.x,
    O: KICK_TEMPLATES.asc.x,
    Z: KICK_TEMPLATES.asc.x,
    T: KICK_TEMPLATES.asc.x,
    J: KICK_TEMPLATES.asc.x,
    S: KICK_TEMPLATES.asc.x,
  },
  ascx: {
    I: KICK_TEMPLATES.ascx.x,
    L: KICK_TEMPLATES.ascx.x,
    O: KICK_TEMPLATES.ascx.x,
    Z: KICK_TEMPLATES.ascx.x,
    T: KICK_TEMPLATES.ascx.x,
    J: KICK_TEMPLATES.ascx.x,
    S: KICK_TEMPLATES.ascx.x,
  },
  srs: {
    I: KICK_TEMPLATES.srs.I,
    L: KICK_TEMPLATES.srs.x,
    O: KICK_TEMPLATES.o,
    Z: KICK_TEMPLATES.srs.x,
    T: KICK_TEMPLATES.srs.x,
    J: KICK_TEMPLATES.srs.x,
    S: KICK_TEMPLATES.srs.x,
  },
  world: {
    I: KICK_TEMPLATES.world.I,
    L: KICK_TEMPLATES.world.x,
    O: KICK_TEMPLATES.o,
    Z: KICK_TEMPLATES.world.x,
    T: KICK_TEMPLATES.world.x,
    J: KICK_TEMPLATES.world.x,
    S: KICK_TEMPLATES.world.x,
  },
  tetrax: {
    I: KICK_TEMPLATES.tetrax.I,
    L: KICK_TEMPLATES.tetrax.x,
    O: KICK_TEMPLATES.o,
    Z: KICK_TEMPLATES.tetrax.x,
    T: KICK_TEMPLATES.tetrax.x,
    J: KICK_TEMPLATES.tetrax.x,
    S: KICK_TEMPLATES.tetrax.x,
  },
  retro: {
    I: KICK_TEMPLATES.none.all,
    L: KICK_TEMPLATES.none.all,
    O: KICK_TEMPLATES.o,
    Z: KICK_TEMPLATES.none.all,
    T: KICK_TEMPLATES.none.all,
    J: KICK_TEMPLATES.none.all,
    S: KICK_TEMPLATES.none.all,
  },
  deluxe: {
    I: KICK_TEMPLATES.deluxe.x,
    L: KICK_TEMPLATES.deluxe.x,
    O: KICK_TEMPLATES.o,
    Z: KICK_TEMPLATES.deluxe.x,
    T: KICK_TEMPLATES.deluxe.x,
    J: KICK_TEMPLATES.deluxe.x,
    S: KICK_TEMPLATES.deluxe.x,
  },
  ars: {
    I: KICK_TEMPLATES.ars.I,
    L: KICK_TEMPLATES.ars.x,
    O: KICK_TEMPLATES.o,
    Z: KICK_TEMPLATES.ars.x,
    T: KICK_TEMPLATES.ars.x,
    J: KICK_TEMPLATES.ars.x,
    S: KICK_TEMPLATES.ars.x,
    exception: {
      L: [
        [
          [1, 0],
          [1, -1],
        ],
        [],
        [
          [1, 2],
          [1, 0],
        ],
        [],
      ],
      J: [
        [
          [1, 0],
          [1, -1],
        ],
        [],
        [
          [1, 2],
          [1, 0],
        ],
        [],
      ],
      T: [[[1, -1]], [], [[1, 0]], []],
    },
    unlessToWith: {
      L: [
        [
          [[]],
          [[]],
          [[]],
          [
            [0, -1],
            [1, 0],
          ],
        ],
        [[[]], [[]], [[]], [[]]],
        [
          [[]],
          [[]],
          [[]],
          [
            [0, 0],
            [1, 2],
          ],
        ],
        [[[]], [[]], [[]], [[]]],
      ],
      J: [
        [
          [[]],
          [
            [2, -1],
            [1, 0],
          ],
          [[]],
          [[]],
        ],
        [[[]], [[]], [[]], [[]]],
        [
          [[]],
          [
            [2, 0],
            [1, 2],
          ],
          [[]],
          [[]],
        ],
        [[[]], [[]], [[]], [[]]],
      ],
    },
  },
  sega: {
    I: KICK_TEMPLATES.sega.I,
    L: KICK_TEMPLATES.sega.x,
    O: KICK_TEMPLATES.o,
    Z: KICK_TEMPLATES.sega.x,
    T: KICK_TEMPLATES.sega.x,
    J: KICK_TEMPLATES.sega.x,
    S: KICK_TEMPLATES.sega.x,
    exception: {
      L: [
        [
          [1, 0],
          [1, -1],
        ],
        [],
        [
          [1, 2],
          [1, 0],
        ],
        [],
      ],
      J: [
        [
          [1, 0],
          [1, -1],
        ],
        [],
        [
          [1, 2],
          [1, 0],
        ],
        [],
      ],
      T: [[[1, -1]], [], [[1, 0]], []],
    },
    unlessToWith: {
      L: [
        [
          [[]],
          [[]],
          [[]],
          [
            [0, -1],
            [1, 0],
          ],
        ],
        [[[]], [[]], [[]], [[]]],
        [
          [[]],
          [[]],
          [[]],
          [
            [0, 0],
            [1, 2],
          ],
        ],
        [[[]], [[]], [[]], [[]]],
      ],
      J: [
        [
          [[]],
          [
            [2, -1],
            [1, 0],
          ],
          [[]],
          [[]],
        ],
        [[[]], [[]], [[]], [[]]],
        [
          [[]],
          [
            [2, 0],
            [1, 2],
          ],
          [[]],
          [[]],
        ],
        [[[]], [[]], [[]], [[]]],
      ],
    },
  },
  oshisaure: {
    I: KICK_TEMPLATES.oshisaure.I,
    L: KICK_TEMPLATES.oshisaure.x,
    O: KICK_TEMPLATES.o,
    Z: KICK_TEMPLATES.oshisaure.x,
    T: KICK_TEMPLATES.oshisaure.x,
    J: KICK_TEMPLATES.oshisaure.x,
    S: KICK_TEMPLATES.oshisaure.x,
  },
}
KICK_TABLES.arsti = {
  ...KICK_TABLES.ars,
  I: KICK_TEMPLATES.ars.I,
  T: KICK_TEMPLATES.ars.T,
  killPieceLockDelay: {
    T: [
      [[-1], [-1], [-1], [-1]],
      [[3], [-1], [-1], [-1]],
      [[3], [-1], [-1], [-1]],
      [[3], [-1], [-1], [-1]],
    ],
    I: [
      [[-1], [1], [-1], [1]],
      [[-1], [-1], [-1], [-1]],
      [[-1], [1], [-1], [1]],
      [[-1], [-1], [-1], [-1]],
    ],
  },
  allowKickOffGround: {
    I: [false, true, false, true],
  },
}
KICK_TABLES.arsx = {
  I: KICK_TEMPLATES.arsx.I,
  L: KICK_TEMPLATES.arsx.x,
  O: KICK_TEMPLATES.o,
  Z: KICK_TEMPLATES.arsx.x,
  T: KICK_TEMPLATES.arsx.T,
  J: KICK_TEMPLATES.arsx.x,
  S: KICK_TEMPLATES.arsx.x,
}
KICK_TABLES.handheld = KICK_TABLES.retro
KICK_TABLES.original = KICK_TABLES.retro
KICK_TABLES.ace = KICK_TABLES.arsx
KICK_TABLES.aceworld = KICK_TABLES.srs
KICK_TABLES.battle = KICK_TABLES.srs
KICK_TABLES.friends = KICK_TABLES.srs
KICK_TABLES.dshock = KICK_TABLES.srs
KICK_TABLES.t99 = KICK_TABLES.srs
KICK_TABLES.ppt = KICK_TABLES.srs
KICK_TABLES.arsae = KICK_TABLES.arsx
KICK_TABLES.worldae = KICK_TABLES.srs
KICK_TABLES.toj = KICK_TABLES.srs
KICK_TABLES.srsx = KICK_TABLES.srs
KICK_TABLES.newcentury = KICK_TABLES.srs
KICK_TABLES.party = KICK_TABLES.friends
KICK_TABLES.heboris = KICK_TABLES.ars
KICK_TABLES.tonline = KICK_TABLES.srs
KICK_TABLES.krs = {
  I: KICK_TEMPLATES.krs.I,
  L: KICK_TEMPLATES.krs.LJ,
  O: KICK_TEMPLATES.krs.O,
  Z: KICK_TEMPLATES.krs.x,
  T: KICK_TEMPLATES.krs.T,
  J: KICK_TEMPLATES.krs.LJ,
  S: KICK_TEMPLATES.krs.x,
}
KICK_TABLES.ksc = {
  I: KICK_TEMPLATES.ksc.I,
  L: KICK_TEMPLATES.ksc.x,
  O: KICK_TEMPLATES.ksc.O,
  Z: KICK_TEMPLATES.ksc.x,
  T: KICK_TEMPLATES.ksc.T,
  J: KICK_TEMPLATES.ksc.x,
  S: KICK_TEMPLATES.ksc.x,
}

export const PIECE_COLORS = {
  srs: {
    I: "lightBlue",
    L: "orange",
    O: "yellow",
    Z: "red",
    T: "purple",
    J: "blue",
    S: "green",
  },
  tetrax: {
    I: "orange",
    L: "yellow",
    O: "green",
    Z: "red",
    T: "purple",
    J: "blue",
    S: "lightBlue",
  },
  retro: {
    I: "white",
    L: "orange",
    O: "white",
    Z: "blue",
    T: "white",
    J: "blue",
    S: "orange",
  },
  handheld: {
    I: "red",
    L: "orange",
    O: "yellow",
    Z: "green",
    T: "lightBlue",
    J: "blue",
    S: "purple",
  },
  deluxe: {
    I: "red",
    L: "orange",
    O: "yellow",
    Z: "green",
    T: "lightBlue",
    J: "blue",
    S: "purple",
  },
  handheldSpecial: {
    I: "i",
    L: "l",
    O: "o",
    Z: "z",
    T: "t",
    J: "j",
    S: "s",
  },
  retroSpecial: {
    I: "x",
    L: "l",
    O: "x",
    Z: "l",
    T: "x",
    J: "r",
    S: "r",
  },
  ars: {
    I: "red",
    L: "orange",
    O: "yellow",
    Z: "green",
    T: "lightBlue",
    J: "blue",
    S: "purple",
  },
  oshisaure: {
    I: "purple",
    L: "red",
    O: "orange",
    Z: "blue",
    T: "green",
    J: "lightBlue",
    S: "yellow",
  },
  original: {
    I: "green",
    L: "green",
    O: "green",
    Z: "green",
    T: "green",
    J: "green",
    S: "green",
  },
}
PIECE_COLORS.asc = PIECE_COLORS.srs
PIECE_COLORS.ascx = PIECE_COLORS.srs
PIECE_COLORS.world = PIECE_COLORS.srs
PIECE_COLORS.arsti = PIECE_COLORS.ars
PIECE_COLORS.arsx = PIECE_COLORS.ars
PIECE_COLORS.ace = PIECE_COLORS.world
PIECE_COLORS.aceworld = PIECE_COLORS.world
PIECE_COLORS.battle = PIECE_COLORS.srs
PIECE_COLORS.friends = PIECE_COLORS.srs
PIECE_COLORS.dshock = PIECE_COLORS.srs
PIECE_COLORS.t99 = PIECE_COLORS.srs
PIECE_COLORS.ppt = PIECE_COLORS.srs
PIECE_COLORS.arsae = PIECE_COLORS.arsx
PIECE_COLORS.worldae = PIECE_COLORS.world
PIECE_COLORS.toj = PIECE_COLORS.srs
PIECE_COLORS.srsx = PIECE_COLORS.srs
PIECE_COLORS.sega = PIECE_COLORS.ars
PIECE_COLORS.tonline = PIECE_COLORS.srs
PIECE_COLORS.krs = PIECE_COLORS.arsx
PIECE_COLORS.ksc = PIECE_COLORS.srs
PIECE_COLORS.heboris = PIECE_COLORS.ars
PIECE_COLORS.newcentury = PIECE_COLORS.srs
PIECE_COLORS.party = PIECE_COLORS.friends

export const NEXT_OFFSETS = {
  monomino: {
    I: [0.5, -1],
    L: [1.5, 0],
    O: [0.5, 0],
    Z: [1.5, 1],
    T: [0.5, -1],
    J: [1.5, 1],
    S: [0.5, -1],
  },
  srs: {
    I: [-1, -1],
    L: [0.5, 0.5],
    O: [0, -0.5],
    Z: [0.5, 0.5],
    T: [-0.5, -0.5],
    J: [0.5, 0.5],
    S: [-0.5, -0.5],
  },
  retro: {
    I: [-1, -1],
    L: [0.5, -0.5],
    O: [0, -0.5],
    Z: [0.5, 0.5],
    T: [-0.5, -1.5],
    J: [0.5, -0.5],
    S: [-0.5, -0.5],
  },
}
NEXT_OFFSETS.asc = NEXT_OFFSETS.srs
NEXT_OFFSETS.ascx = NEXT_OFFSETS.srs
NEXT_OFFSETS.world = NEXT_OFFSETS.srs
NEXT_OFFSETS.tetrax = NEXT_OFFSETS.srs
NEXT_OFFSETS.oshisaure = NEXT_OFFSETS.srs
NEXT_OFFSETS.handheld = NEXT_OFFSETS.retro
NEXT_OFFSETS.deluxe = NEXT_OFFSETS.retro
NEXT_OFFSETS.ars = NEXT_OFFSETS.retro
NEXT_OFFSETS.arsti = NEXT_OFFSETS.ars
NEXT_OFFSETS.arsx = NEXT_OFFSETS.ars
NEXT_OFFSETS.original = NEXT_OFFSETS.retro
NEXT_OFFSETS.ace = NEXT_OFFSETS.arsx
NEXT_OFFSETS.aceworld = NEXT_OFFSETS.srs
NEXT_OFFSETS.battle = NEXT_OFFSETS.srs
NEXT_OFFSETS.friends = NEXT_OFFSETS.srs
NEXT_OFFSETS.dshock = NEXT_OFFSETS.srs
NEXT_OFFSETS.t99 = NEXT_OFFSETS.srs
NEXT_OFFSETS.ppt = NEXT_OFFSETS.srs
NEXT_OFFSETS.srsx = NEXT_OFFSETS.srs
NEXT_OFFSETS.toj = NEXT_OFFSETS.srs
NEXT_OFFSETS.arsae = NEXT_OFFSETS.arsx
NEXT_OFFSETS.worldae = NEXT_OFFSETS.srs
NEXT_OFFSETS.sega = NEXT_OFFSETS.ars
NEXT_OFFSETS.tonline = NEXT_OFFSETS.srs
NEXT_OFFSETS.krs = NEXT_OFFSETS.arsx
NEXT_OFFSETS.ksc = NEXT_OFFSETS.srs
NEXT_OFFSETS.newcentury = NEXT_OFFSETS.srs
NEXT_OFFSETS.heboris = NEXT_OFFSETS.ars
NEXT_OFFSETS.party = NEXT_OFFSETS.friends

export const PIECE_OFFSETS = {
  asc: {
    I: [
      [0, 0],
      [0, -1],
      [1, -1],
      [1, 0],
    ],
    L: [
      [0, 0],
      [0, 0],
      [0, 0],
      [0, 0],
    ],
    O: [
      [0, 0],
      [0, 1],
      [-1, 1],
      [-1, 0],
    ],
    Z: [
      [0, 0],
      [0, 0],
      [0, 0],
      [0, 0],
    ],
    T: [
      [0, 0],
      [0, 0],
      [0, 0],
      [0, 0],
    ],
    J: [
      [0, 0],
      [0, 0],
      [0, 0],
      [0, 0],
    ],
    S: [
      [0, 0],
      [0, 0],
      [0, 0],
      [0, 0],
    ],
  },
  ascx: {
    I: [
      [0, 0],
      [0, -1],
      [1, -1],
      [1, 0],
    ],
    L: [
      [0, 0],
      [0, 0],
      [0, 0],
      [0, 0],
    ],
    O: [
      [0, 0],
      [0, 1],
      [-1, 1],
      [-1, 0],
    ],
    Z: [
      [0, 0],
      [0, 0],
      [0, 0],
      [0, 0],
    ],
    T: [
      [0, 0],
      [0, 0],
      [0, 0],
      [0, 0],
    ],
    J: [
      [0, 0],
      [0, 0],
      [0, 0],
      [0, 0],
    ],
    S: [
      [0, 0],
      [0, 0],
      [0, 0],
      [0, 0],
    ],
  },
  srs: {
    I: [
      [0, 0],
      [0, 0],
      [0, 0],
      [0, 0],
    ],
    L: [
      [0, 0],
      [0, 0],
      [0, 0],
      [0, 0],
    ],
    O: [
      [0, 0],
      [0, 0],
      [0, 0],
      [0, 0],
    ],
    Z: [
      [0, 0],
      [0, 0],
      [0, 0],
      [0, 0],
    ],
    T: [
      [0, 0],
      [0, 0],
      [0, 0],
      [0, 0],
    ],
    J: [
      [0, 0],
      [0, 0],
      [0, 0],
      [0, 0],
    ],
    S: [
      [0, 0],
      [0, 0],
      [0, 0],
      [0, 0],
    ],
  },
  retro: {
    I: [
      [0, 1],
      [0, 0],
      [0, 0],
      [1, 0],
    ],
    L: [
      [0, 0],
      [0, 0],
      [0, 0],
      [0, 0],
    ],
    O: [
      [0, 0],
      [0, 0],
      [0, 0],
      [0, 0],
    ],
    Z: [
      [0, 1],
      [0, 0],
      [0, 0],
      [1, 0],
    ],
    T: [
      [0, 0],
      [0, 0],
      [0, 0],
      [0, 0],
    ],
    J: [
      [0, 0],
      [0, 0],
      [0, 0],
      [0, 0],
    ],
    S: [
      [0, 1],
      [0, 0],
      [0, 0],
      [1, 0],
    ],
  },
  handheld: {
    I: [
      [0, 1],
      [-1, 0],
      [0, 0],
      [0, 0],
    ],
    L: [
      [0, 0],
      [0, 0],
      [0, 0],
      [0, 0],
    ],
    O: [
      [0, 0],
      [0, 0],
      [0, 0],
      [0, 0],
    ],
    Z: [
      [0, 1],
      [-1, 0],
      [0, 0],
      [0, 0],
    ],
    T: [
      [0, 0],
      [0, 0],
      [0, 0],
      [0, 0],
    ],
    J: [
      [0, 0],
      [0, 0],
      [0, 0],
      [0, 0],
    ],
    S: [
      [0, 1],
      [-1, 0],
      [0, 0],
      [0, 0],
    ],
  },
  ars: {
    I: [
      [0, 0],
      [0, 0],
      [0, -1],
      [1, 0],
    ],
    L: [
      [0, 1],
      [0, 0],
      [0, 0],
      [0, 0],
    ],
    O: [
      [0, 0],
      [0, 0],
      [0, 0],
      [0, 0],
    ],
    Z: [
      [0, 1],
      [0, 0],
      [0, 0],
      [1, 0],
    ],
    T: [
      [0, 1],
      [0, 0],
      [0, 0],
      [0, 0],
    ],
    J: [
      [0, 1],
      [0, 0],
      [0, 0],
      [0, 0],
    ],
    S: [
      [0, 1],
      [-1, 0],
      [0, 0],
      [0, 0],
    ],
  },
  oshisaure: {
    I: [
      [0, 1],
      [0, 0],
      [0, 0],
      [1, 0],
    ],
    L: [
      [0, 0],
      [0, 0],
      [0, 0],
      [0, 0],
    ],
    O: [
      [0, 0],
      [0, 0],
      [0, 0],
      [0, 0],
    ],
    Z: [
      [0, 0],
      [-1, 0],
      [0, -1],
      [0, 0],
    ],
    T: [
      [0, 0],
      [0, 0],
      [0, 0],
      [0, 0],
    ],
    J: [
      [0, 0],
      [0, 0],
      [0, 0],
      [0, 0],
    ],
    S: [
      [0, 0],
      [0, 0],
      [0, -1],
      [1, 0],
    ],
  },
}


PIECE_OFFSETS.arsx = {
  ...PIECE_OFFSETS.ars,
  I: [
    [0, 0],
    [0, 0],
    [0, -1],
    [0, 0],
  ],
}
PIECE_OFFSETS.original = {
  ...PIECE_OFFSETS.srs,
  I: [
    [0, 0],
    [0, 0],
    [0, -1],
    [1, 0],
  ],
}

PIECE_OFFSETS.world = PIECE_OFFSETS.srs
PIECE_OFFSETS.tetrax = PIECE_OFFSETS.srs
PIECE_OFFSETS.deluxe = PIECE_OFFSETS.srs
PIECE_OFFSETS.arsti = PIECE_OFFSETS.ars
PIECE_OFFSETS.battle = PIECE_OFFSETS.srs
PIECE_OFFSETS.friends = PIECE_OFFSETS.srs
PIECE_OFFSETS.ace = PIECE_OFFSETS.arsx
PIECE_OFFSETS.aceworld = PIECE_OFFSETS.srs
PIECE_OFFSETS.t99 = PIECE_OFFSETS.srs
PIECE_OFFSETS.ppt = PIECE_OFFSETS.srs
PIECE_OFFSETS.dshock = PIECE_OFFSETS.srs
PIECE_OFFSETS.srsx = PIECE_OFFSETS.srs
PIECE_OFFSETS.toj = PIECE_OFFSETS.srs
PIECE_OFFSETS.arsae = PIECE_OFFSETS.arsx
PIECE_OFFSETS.worldae = PIECE_OFFSETS.srs
PIECE_OFFSETS.newcentury = PIECE_OFFSETS.srs
PIECE_OFFSETS.sega = PIECE_OFFSETS.ars
PIECE_OFFSETS.heboris = PIECE_OFFSETS.ars
PIECE_OFFSETS.party = PIECE_OFFSETS.friends
PIECE_OFFSETS.tonline = {
  I: PIECE_OFFSETS.srs.I,
  L: PIECE_OFFSETS.srs.L,
  O: PIECE_OFFSETS.asc.O,
  Z: PIECE_OFFSETS.srs.Z,
  T: PIECE_OFFSETS.srs.T,
  J: PIECE_OFFSETS.srs.J,
  S: PIECE_OFFSETS.srs.S,
}
PIECE_OFFSETS.krs = {
  I: PIECE_OFFSETS.ascx.I,
  L: PIECE_OFFSETS.arsx.L,
  O: PIECE_OFFSETS.ascx.O,
  Z: PIECE_OFFSETS.ascx.Z,
  T: PIECE_OFFSETS.arsx.T,
  J: PIECE_OFFSETS.arsx.J,
  S: PIECE_OFFSETS.ascx.S,
}
PIECE_OFFSETS.ksc = {
  I: PIECE_OFFSETS.srs.I,
  L: PIECE_OFFSETS.srs.L,
  O: PIECE_OFFSETS.asc.O,
  Z: PIECE_OFFSETS.srs.Z,
  T: PIECE_OFFSETS.srs.T,
  J: PIECE_OFFSETS.srs.J,
  S: PIECE_OFFSETS.srs.S,
}

export const PIECE_BINARIES = {
  L: 0b000,
  J: 0b001,
  I: 0b010,
  O: 0b011,
  Z: 0b100,
  S: 0b101,
  T: 0b110,
}
export const SCORE_TABLES = {
  guideline: {
    erase1: 100,
    erase2: 300,
    erase3: 500,
    erase4: 800,
    tspin0: 400,
    tspin1: 700, // These add to the regular erase points
    tspin2: 900,
    tspin3: 1100,
    tspin4: 1200,
    tmini: 100,
    softDrop: 1,
    sonicDrop: 2,
    hardDrop: 2,
    updateSoftDropImmediately: true,
    hasSpins: true,
    hasCombo: true,
    levelAdditive: 0,
    levelMultiplied: [
      "erase1",
      "erase2",
      "erase3",
      "erase4",
      "tspin0",
      "tspin1",
      "tspin2",
      "tspin3",
      "tspin4",
      "tmini",
      "combo",
    ],
    b2bMultiplier: 1.5,
    b2bMultiplied: [
      "erase1",
      "erase2",
      "erase3",
      "erase4",
      "tspin1",
      "tspin2",
      "tspin3",
      "tspin4",
      "tmini",
    ],
    combo: 50,
  },
  tetrax: {
    erase1: 100,
    erase2: 200,
    erase3: 400,
    erase4: 800,
    tspin0: 50,
    tspin1: 100, // These add to the regular erase points
    tspin2: 150,
    tspin3: 200,
    tspin4: 250,
    tmini: 0,
    softDrop: 1,
    sonicDrop: 2,
    hardDrop: 2,
    updateSoftDropImmediately: true,
    hasSpins: true,
    hasCombo: true,
    levelAdditive: 0,
    levelMultiplied: [
      "erase1",
      "erase2",
      "erase3",
      "erase4",
      "tspin0",
      "tspin1",
      "tspin2",
      "tspin3",
      "tspin4",
      "tmini",
      "combo",
    ],
    b2bMultiplier: 1.5,
    b2bMultiplied: [
      "erase1",
      "erase2",
      "erase3",
      "erase4",
      "tspin1",
      "tspin2",
      "tspin3",
      "tspin4",
      "tmini",
    ],
    combo: 25,
  },
  retro: {
    erase1: 40,
    erase2: 100,
    erase3: 300,
    erase4: 1200,
    softDrop: 1,
    sonicDrop: 2,
    hardDrop: 2,
    updateSoftDropImmediately: false,
    levelAdditive: 1,
    levelMultiplied: ["erase1", "erase2", "erase3", "erase4"],
    b2bMultiplier: 1,
    b2bMultiplied: [],
  },
  arcade: {
    erase1: 10,
    erase2: 20,
    erase3: 40,
    erase4: 80,
    softDrop: 1,
    sonicDrop: 2,
    hardDrop: 2,
    updateSoftDropImmediately: false,
    levelAdditive: 0,
    levelMultiplied: ["erase1", "erase2", "erase3", "erase4"],
    b2bMultiplier: 1,
    b2bMultiplied: [],
    combo: 5,
  },
  sega: {
    erase1: 100,
    erase2: 400,
    erase3: 900,
    erase4: 2000,
    softDrop: 1,
    sonicDrop: 2,
    hardDrop: 2,
    updateSoftDropImmediately: false,
    levelAdditive: 1,
    levelMultiplied: ["erase1", "erase2", "erase3", "erase4"],
    b2bMultiplier: 1,
    b2bMultiplied: [],
  },
  krs: {
    erase1: 100,
    erase2: 200,
    erase3: 300,
    erase4: 400,
    tspin0: 100,
    tspin1: 100,
    tspin2: 100,
    tspin3: 100,
    tspin4: 100,
    tmini: 100,
    softDrop: 1,
    sonicDrop: 2,
    hardDrop: 2,
    updateSoftDropImmediately: false,
    hasSpins: true,
    hasCombo: true,
    levelAdditive: 0,
    levelMultiplied: [
      "erase1",
      "erase2",
      "erase3",
      "erase4",
      "tspin0",
      "tspin1",
      "tspin2",
      "tspin3",
      "tspin4",
      "tmini",
      "combo",
    ],
    b2bMultiplier: 2,
    b2bMultiplied: [
      "erase4",
      "tspin1",
      "tspin2",
      "tspin3",
      "tspin4",
      "tmini",
    ],
    combo: 10,
  },
  tgm: {
    erase1: 0,
    erase2: 0,
    erase3: 0,
    erase4: 0,
    softDrop: 0,
    sonicDrop: 0,
    hardDrop: 0,
	hasCombo: true,
    updateSoftDropImmediately: false,
    levelAdditive: 0,
    levelMultiplied: [],
    b2bMultiplier: 1,
    b2bMultiplied: [],
    combo: 0,
  },
  blank: {
    erase1: 0,
    erase2: 0,
    erase3: 0,
    erase4: 0,
    softDrop: 0,
    sonicDrop: 0,
    hardDrop: 0,
    updateSoftDropImmediately: false,
    levelAdditive: 0,
    levelMultiplied: [],
    b2bMultiplier: 1,
    b2bMultiplied: [],
    combo: 0,
  },
}

export const SPIN_POINTS = {
  I: {
    high: [
      [
        [2, 1],
        [3, 3],
        [3, 1],
        [2, 3],
      ],
      [
        [2, 2],
        [4, 3],
        [2, 3],
        [4, 2],
      ],
      [
        [2, 2],
        [3, 4],
        [3, 2],
        [2, 4],
      ],
      [
        [1, 2],
        [3, 3],
        [1, 3],
        [3, 2],
      ],
    ],
    low: [
      [
        [0, 2],
        [5, 2],
      ],
      [
        [3, 0],
        [3, 5],
      ],
      [
        [0, 3],
        [5, 3],
      ],
      [
        [2, 0],
        [2, 5],
      ],
    ],
  },
  L: {
    high: [
      [
        [1, 0],
        [0, 0],
      ],
      [
        [2, 1],
        [2, 0],
      ],
      [
        [1, 2],
        [2, 2],
      ],
      [
        [0, 1],
        [0, 2],
      ],
    ],
    low: [
      [
        [0, 2],
        [2, 2],
      ],
      [
        [0, 0],
        [0, 2],
      ],
      [
        [0, 0],
        [2, 0],
      ],
      [
        [2, 0],
        [2, 2],
      ],
    ],
  },
  Z: {
    high: [
      [
        [2, 0],
        [0, 1],
      ],
      [
        [1, 0],
        [2, 2],
      ],
      [
        [2, 1],
        [0, 2],
      ],
      [
        [0, 0],
        [1, 2],
      ],
    ],
    low: [
      [
        [-1, 0],
        [3, 1],
      ],
      [
        [2, -1],
        [1, 3],
      ],
      [
        [-1, 1],
        [3, 2],
      ],
      [
        [1, -1],
        [0, 3],
      ],
    ],
  },
  T: {
    high: [
      [
        [1, 1],
        [3, 1],
      ],
      [
        [3, 1],
        [3, 3],
      ],
      [
        [1, 3],
        [3, 3],
      ],
      [
        [1, 1],
        [1, 3],
      ],
    ],
    low: [
      [
        [1, 3],
        [3, 3],
      ],
      [
        [1, 1],
        [1, 3],
      ],
      [
        [1, 1],
        [3, 1],
      ],
      [
        [3, 1],
        [3, 3],
      ],
    ],
  },
  J: {
    high: [
      [
        [1, 0],
        [2, 0],
      ],
      [
        [2, 1],
        [2, 2],
      ],
      [
        [0, 2],
        [1, 2],
      ],
      [
        [0, 0],
        [0, 1],
      ],
    ],
    low: [
      [
        [0, 2],
        [2, 2],
      ],
      [
        [0, 0],
        [0, 2],
      ],
      [
        [0, 0],
        [2, 0],
      ],
      [
        [2, 0],
        [2, 2],
      ],
    ],
  },
  S: {
    high: [
      [
        [1, 1],
        [3, 2],
      ],
      [
        [3, 1],
        [2, 3],
      ],
      [
        [1, 2],
        [3, 3],
      ],
      [
        [2, 1],
        [1, 3],
      ],
    ],
    low: [
      [
        [0, 2],
        [4, 1],
      ],
      [
        [2, 0],
        [3, 4],
      ],
      [
        [0, 3],
        [4, 2],
      ],
      [
        [2, 0],
        [2, 4],
      ],
    ],
  },

  /* ????? */
  O: {
    high: [
      [
        [1, 0],
        [2, 0],
        [1, 3],
        [2, 3],
      ],
      [
        [0, 1],
        [3, 1],
        [0, 2],
        [3, 2],
      ],
      [
        [1, 0],
        [2, 0],
        [1, 3],
        [2, 3],
      ],
      [
        [0, 1],
        [3, 1],
        [0, 2],
        [3, 2],
      ],
    ],
    low: [
      [
        [0, 1],
        [3, 1],
        [0, 2],
        [3, 2],
      ],
      [
        [1, 0],
        [2, 0],
        [1, 3],
        [2, 3],
      ],
      [
        [0, 1],
        [3, 1],
        [0, 2],
        [3, 2],
      ],
      [
        [1, 0],
        [2, 0],
        [1, 3],
        [2, 3],
      ],
    ],
  },
}
export const SPIN_SETS = {
  tOnly: ["T"],
  all: ["I", "L", "Z", "T", "J", "S", "O"],
  none: [],
}
export const SKIN_SETS = {
  asc: "tetrjs",
  ascx: "tetrjs",
  srs: "tonline",
  world: "glossy",
  tetrax: "tetrax",
  retro: "retro",
  handheld: "handheld",
  deluxe: "deluxe",
  ars: "arcade",
  arsti: "arika",
  arsx: "arika",
  oshisaure: "oshisaure",
  original: "bone",
  ace: "arika",
  aceworld: "glossy",
  battle: "friends",
  friends: "friends",
  dshock: "dshock",
  arsae: "prismal",
  worldae: "pyramidal",
  t99: "t99",
  ppt: "ppt",
  srsx: "srsx",
  sega: "sega",
  newcentury: "sega",
  tonline: "tonline",
  krs: "krs",
  ksc: "krs",
  heboris: "arcade",
  toj: "toj",
  party: "party",
}
export const SOUND_SETS = {
  asc: "tetrax",
  ascx: "tetrax",
  srs: "standard",
  world: "tgm3",
  tetrax: "tetrax",
  retro: "nes",
  handheld: "handheld",
  deluxe: "deluxe",
  ars: "tgm2",
  arsti: "tgm3",
  arsx: "ace",
  oshisaure: "tetrax",
  original: "tetrax",
  ace: "ace",
  aceworld: "ace",
  battle: "battle",
  friends: "friends",
  dshock: "dshock",
  arsae: "tgm4",
  worldae: "tgm4",
  t99: "t99",
  ppt: "ppt",
  srsx: "tetrax",
  sega: "sega",
  newcentury: "newcentury",
  tonline: "tonline",
  krs: "tetrax",
  ksc: "tetrax",
  heboris: "heboris",
  toj: "toj",
  party: "party",
}